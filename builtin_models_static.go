// Code generated by go-bindata.
// sources:
// builtin_models/Inception_5h.yml
// builtin_models/MobileNet_v1_0.25_128.yml
// builtin_models/MobileNet_v1_0.25_224.yml
// builtin_models/MobileNet_v1_0.50_128.yml
// builtin_models/MobileNet_v1_0.50_224.yml
// builtin_models/MobileNet_v1_0.75_128.yml
// builtin_models/MobileNet_v1_0.75_224.yml
// builtin_models/MobileNet_v1_1.0_128.yml
// builtin_models/MobileNet_v1_1.0_224.yml
// builtin_models/resnet152.yaml
// builtin_models/resnet50.yml
// builtin_models/vgg19.yml
// DO NOT EDIT!

package tensorflow

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _inception_5hYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xc1\x6e\xdc\x3a\x0c\xbc\xeb\x2b\x78\x79\xb7\xac\xbd\x76\xb2\xc9\x8b\x0e\x05\x8a\xf6\x12\xa0\x6d\x80\xb6\xe8\xa5\x08\x0c\xae\x4c\xdb\x6a\x65\x49\xa0\xe8\xdd\xa4\x5f\x5f\xc8\x76\xb2\x09\x7a\xd9\x8b\x20\x81\x33\xe4\x68\x38\x1e\x47\xd2\x70\xe7\x0d\x45\xb1\xc1\xab\x8e\x71\xa4\x63\xe0\xdf\x5a\x01\x2c\xc5\xef\xe4\x53\xe0\xce\x85\xa3\x02\x38\x10\x27\x1b\xbc\x86\xaa\xa8\xd5\xab\xc7\x56\x99\xe0\x05\xad\x27\xce\x4c\x1c\xdb\xeb\xab\x7c\x01\xe8\xe3\xa4\x81\xd1\x46\x0e\xbf\xc8\x48\x69\x90\x47\xb7\x91\x97\xa6\x7a\xc6\x6e\x4c\x9c\x66\xb8\x39\x0f\xde\xcf\xf0\x18\xcd\xf5\x95\x23\x7d\x1e\x73\x45\xaf\xdc\x33\x94\xbd\x26\xb4\x94\x0c\xdb\xd9\x24\x0d\xef\x14\xc0\x7b\x0f\x76\xc4\x9e\x36\xc6\x61\x4a\xb6\xb3\x06\x73\x11\x4c\xf0\x87\xe0\xa6\x7c\x47\x07\x9e\x24\xbb\x59\x28\x38\x99\x0c\x68\x06\x4b\x07\x4a\x70\xf3\x7f\xb1\xfd\x0f\x24\xc4\x4d\x05\xe8\x5b\xb8\xbd\x2c\x6e\x97\xf7\x0e\xd0\x98\x89\xd1\x3c\x41\xf0\x20\x03\xc1\xdd\xa7\x6f\x3f\xbe\x7e\x80\x7a\x5b\xd5\x70\x40\x67\xdb\x65\x5c\x8b\x82\x89\x64\x1e\x20\x79\x78\xb2\x49\x12\x84\x0e\x3a\x3a\x12\x83\x0c\xe8\xa1\xde\x7d\x86\x88\x79\xb5\x42\x9c\x0a\xc5\xd4\x11\x93\x37\x94\xb2\x75\x1b\x18\x44\xa2\x2e\x4b\xe4\x47\x7b\x28\x02\xf7\x25\xee\x53\x59\xed\xaa\xba\xd8\x6e\x77\xd7\x37\xca\x59\x43\x3e\xe5\x2c\xdc\x7f\xbc\x57\xd6\xc7\x49\x56\xa6\x3c\x45\xd2\x8b\x11\xb3\xa7\x6f\x6c\xca\xb2\x67\xf0\x2b\xc0\x49\xc6\xb2\x35\x80\xd6\x8e\xe4\x73\x8e\x92\x86\x9f\xd5\x05\x5c\x5e\x40\x5d\x5f\xcd\xc7\xc3\x0a\x19\x09\x7d\x2e\x56\x37\x17\xf0\x7c\x3c\xa8\x30\x49\x9c\x24\xb7\x59\x54\x74\x84\x32\x71\x1e\xf3\x46\x05\x7a\x58\x90\x8b\x8a\xbc\x12\x70\xb8\x27\xa7\xfe\x55\xb3\xb6\x48\xcd\xc4\x6e\xfd\x96\x27\x69\x4c\x18\x63\xd3\x33\xc6\xa1\x99\x99\x4d\x12\xb6\xbe\x4f\x85\x3c\x8a\x1a\x43\x4b\x2e\xd3\xf7\x98\x68\x21\x66\x3f\x93\x2e\xcb\x24\x81\xb1\xa7\xa2\x0f\xa1\x77\x84\xd1\xa6\xc2\x84\xb1\x6c\xc3\xd1\xbb\x80\x6d\x71\xca\xda\xec\xfa\xdc\x29\x95\xf6\x39\x28\xbb\xa1\xf8\x63\xa3\x02\x58\x46\x47\x94\x41\xc3\x89\xd3\xbc\x00\x17\x6d\x45\xdc\x2b\x00\x9b\x1a\x64\x33\xd8\x03\x69\x10\x9e\x48\xa1\x08\xdb\xfd\x24\xcb\xb2\x47\xf4\xb6\xa3\x24\x0d\x4e\x32\x04\xd6\x80\xfb\x76\x72\x6d\x36\x91\xd1\x3a\xeb\xfb\x66\x8d\x94\x86\xbb\xfc\xff\x2f\x24\xea\x6f\x00\x00\x00\xff\xff\x68\xbf\x6e\xa4\x26\x04\x00\x00"

func inception_5hYmlBytes() ([]byte, error) {
	return bindataRead(
		_inception_5hYml,
		"Inception_5h.yml",
	)
}

func inception_5hYml() (*asset, error) {
	bytes, err := inception_5hYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "Inception_5h.yml", size: 1062, mode: os.FileMode(420), modTime: time.Unix(1502660749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mobilenet_v1_025_128Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x3d\x73\xe3\x3a\x0c\xec\xf9\x2b\xf0\x03\x62\xca\x52\x1c\xc7\xa3\xe2\x55\xaf\x79\xc5\xbb\x34\xe9\x6e\x6e\x34\x30\x09\x59\xbc\x50\x24\x07\x84\xec\x38\xbf\xfe\x86\x94\x27\x1f\x73\x4d\x1a\x8d\x20\xee\x2e\xb4\x0b\x48\x01\x67\xea\xe1\xff\x78\x74\x9e\x7e\x90\xa8\x91\x71\xa6\x4b\xe4\x97\x5e\x01\xac\x87\xcf\x14\x72\xe4\xd1\xc7\x8b\x02\x38\x13\x67\x17\x43\x0f\xad\xee\xd4\xa7\x62\xab\xbb\x07\xdd\x76\x07\x65\x62\x10\x74\x81\xb8\x08\xe0\x6c\xf7\xbb\x72\x03\x70\x4a\x4b\x0f\x8c\x2e\x71\xfc\x4d\x46\x1a\x83\x3c\xfb\x8d\xbc\x6b\xf7\x15\xbb\x31\x69\xa9\x70\xf3\x3d\xf8\xa9\xc2\x53\x32\xfb\x9d\xa7\xfe\x7b\xcc\x1b\xfa\xc6\xfd\xc6\x9b\x7d\x26\x58\xca\x86\x5d\x92\x6a\xfb\x1f\x05\x1f\xd1\x65\x40\x26\xc8\x33\x7a\x7f\x07\x3e\x5e\x36\x1e\x85\x82\xb9\xae\x45\x8a\x17\x62\x98\xa3\x25\x9f\x21\x61\x49\x59\x88\xdd\x1b\x59\x90\x08\x33\x91\x80\x4c\x04\x4c\x39\x2e\x6c\x08\x4c\x0c\x59\x18\x5d\x90\x0c\x71\x04\x84\x33\xb2\x23\xb9\x96\x62\xc9\x04\x06\x33\x65\xad\x00\x9e\x27\x97\x21\x90\x94\x99\x55\x96\xcb\x2b\xa5\xed\x0e\xe0\xf1\x4a\x9c\x01\x83\x05\x34\x93\xa3\x33\x65\xd8\xb5\xfa\x1e\x24\xa6\x4d\x5b\x9f\xef\xf7\xba\xab\xe5\x03\xa0\x31\x0b\xa3\xb9\x6a\xc5\x34\x12\x53\x30\x94\x4b\xa6\x1b\x98\x44\x52\xee\x9b\x06\xf9\xd5\x9d\x75\xe4\x53\x93\xec\xd8\xb4\x8f\xdb\x9d\xde\xee\x0e\xfb\x56\x27\x3b\x2a\xef\x0c\x85\x5c\x16\xe6\xe9\xdf\x27\xe5\x42\x5a\xe4\x46\x97\x6b\xa2\x1e\xdc\x8c\x27\xaa\x89\x7f\x09\xb1\xd8\xae\xe0\x4f\x80\xf7\x80\xf2\x3a\x53\x00\xeb\x66\x0a\x65\xd9\x72\x0f\x3f\xdb\x3b\xb8\xbf\x83\xae\xdb\xd5\xcb\x2f\x15\x17\x49\x8b\x14\xe8\xda\x69\x24\x94\x85\x8b\xd4\x97\x4e\x18\x60\x45\xae\x9d\x4a\x6a\xe0\xf1\x48\x5e\xfd\xdd\xf1\x26\x91\x87\x85\x7d\x5f\xfd\xf7\x4d\x63\x51\x50\xdb\xd9\x1b\x3d\xfb\x66\x7e\x0d\x24\xcd\x3a\xd1\xa6\x0a\x96\x3a\x5f\x43\x26\xd1\xf2\x2a\xaa\x1e\x15\x35\x33\x91\x79\x49\xd1\x05\xf9\x50\x8a\x97\xe0\x23\x5a\xfd\xb1\x66\x35\xd6\x9b\xdc\x5c\x97\x2a\x90\x0c\xe7\x76\x28\x9f\xd6\xd0\x76\x87\xa1\xdb\xb6\x8f\xc3\x76\x3f\xb4\x3b\x2d\xc8\xfa\xf4\xa6\x00\x5c\x1e\x90\xcd\xe4\xce\xd4\x83\xf0\x42\x0a\x45\xd8\x1d\x17\x59\x47\x37\x63\x70\x23\x65\x19\x70\x91\x29\x72\x0f\x78\xb4\x8b\xb7\x25\x29\x46\xe7\x5d\x38\x0d\xc5\x54\x26\xe9\xe1\xbf\xe2\xa1\xfc\x03\x26\x67\x2d\x85\x9b\xde\x9f\x00\x00\x00\xff\xff\x01\xeb\x70\xfb\x21\x04\x00\x00"

func mobilenet_v1_025_128YmlBytes() ([]byte, error) {
	return bindataRead(
		_mobilenet_v1_025_128Yml,
		"MobileNet_v1_0.25_128.yml",
	)
}

func mobilenet_v1_025_128Yml() (*asset, error) {
	bytes, err := mobilenet_v1_025_128YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MobileNet_v1_0.25_128.yml", size: 1057, mode: os.FileMode(420), modTime: time.Unix(1501862853, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mobilenet_v1_025_224Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x3d\x73\xeb\x38\x0c\xec\xf9\x2b\xf0\x03\x62\xca\xd2\xc9\xce\x8d\x8a\xab\xae\xb9\xe2\x2e\x4d\xba\x9b\x37\x1a\x98\x84\x2c\xbe\x50\x24\x07\x84\xec\x38\xbf\xfe\x0d\x29\x4f\x3e\xe6\x35\x69\x34\x82\xb8\xbb\xd0\x2e\x20\x05\x5c\x68\x80\x7f\xe3\xc9\x79\xfa\x8f\x44\x4d\x8c\x0b\x5d\x23\xbf\x0c\x0a\x60\x3b\x7c\xa6\x90\x23\x4f\x3e\x5e\x15\xc0\x85\x38\xbb\x18\x06\x68\x75\xa7\x3e\x15\x7b\xdd\x1d\x74\xd7\xf5\xca\xc4\x20\xe8\x02\x71\x11\xc0\xc5\x1e\xfb\x72\x03\x70\x4e\xeb\x00\x8c\x2e\x71\xfc\x49\x46\x1a\x83\xbc\xf8\x9d\xbc\x6b\x0f\x15\xbb\x33\x69\xad\x70\xf3\x3d\xf8\xb9\xc2\x53\x32\xc7\xde\xd3\xf0\x3d\xe6\x1d\x7d\xe7\x7e\xe3\xcd\x3e\x13\x2c\x65\xc3\x2e\x49\xb5\xfd\x97\x82\x8f\xe8\x32\x20\x13\xe4\x05\xbd\x7f\x00\x1f\xaf\x3b\x8f\x42\xc1\xdc\xb6\x22\xc5\x2b\x31\x2c\xd1\x92\xcf\x90\xb0\xa4\x2c\xc4\xee\x8d\x2c\x48\x84\x85\x48\x40\x66\x02\xa6\x1c\x57\x36\x04\x26\x86\x2c\x8c\x2e\x48\x86\x38\x01\xc2\x05\xd9\x91\xdc\x4a\xb1\x66\x02\x83\x99\xb2\x56\x00\xcf\xb3\xcb\x10\x48\xca\xcc\x2a\xcb\xe5\x8d\xd2\x75\x3d\x78\xbc\x11\x67\xc0\x60\x01\xcd\xec\xe8\x42\x19\x0e\x7b\x7d\x04\x89\x69\xd7\xd6\xe7\x8f\x07\xbd\xaf\xe5\x01\xd0\x98\x95\xd1\xdc\xb4\x62\x9a\x88\x29\x18\xca\x25\xd3\x1d\xcc\x22\x29\x0f\x4d\x83\xfc\xea\x2e\x3a\xf2\xb9\x49\x76\x6a\xda\xc7\x7d\xaf\xf7\xfd\x9f\xc7\x56\x27\x3b\x29\xef\x0c\x85\x5c\x16\xe6\xe9\xef\x27\xe5\x42\x5a\xe5\x4e\x97\x5b\xa2\x01\xdc\x82\x67\xaa\x89\x7f\x09\xb1\xd8\xae\xe0\x4f\x80\xf7\x80\xf2\x36\x53\x00\xeb\x16\x0a\x65\xd9\xf2\x00\xff\xb7\x0f\xf0\xc7\x43\x31\x58\x2f\x3f\x54\x5c\x25\xad\x52\xa0\x5b\xa7\x89\x50\x56\x2e\x52\x5f\x3a\x61\x80\x0d\xb9\x75\x2a\xa9\x81\xc7\x13\x79\xf5\x7b\xc7\xbb\x44\x1e\x57\xf6\x43\xf5\x3f\x34\x8d\x45\x41\x6d\x17\x6f\xf4\xe2\x9b\xe5\x35\x90\x34\xdb\x44\x9b\x2a\x58\xea\x7c\x0b\x99\x44\xcb\xab\xa8\x7a\x54\xd4\xcc\x4c\xe6\x25\x45\x17\xe4\x43\x29\x5e\x83\x8f\x68\xf5\xc7\x9a\xd5\x58\xef\x72\x4b\x5d\xaa\x40\x32\x5e\xda\xb1\x7c\x5a\x63\xd7\xf5\x63\xb7\x6f\x1f\xc7\xfd\x71\x6c\x7b\x2d\xc8\xfa\xfc\xa6\x00\x5c\x1e\x91\xcd\xec\x2e\x34\x80\xf0\x4a\x0a\x45\xd8\x9d\x56\xd9\x46\xb7\x60\x70\x13\x65\x19\x71\x95\x39\xf2\x00\x78\xb2\xab\xb7\x25\x29\x46\xe7\x5d\x38\x8f\xc5\x54\x26\x19\xe0\x9f\xe2\xa1\xfc\x03\x66\x67\x2d\x85\xbb\xde\xaf\x00\x00\x00\xff\xff\x13\x65\xc9\xbf\x21\x04\x00\x00"

func mobilenet_v1_025_224YmlBytes() ([]byte, error) {
	return bindataRead(
		_mobilenet_v1_025_224Yml,
		"MobileNet_v1_0.25_224.yml",
	)
}

func mobilenet_v1_025_224Yml() (*asset, error) {
	bytes, err := mobilenet_v1_025_224YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MobileNet_v1_0.25_224.yml", size: 1057, mode: os.FileMode(420), modTime: time.Unix(1501698979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mobilenet_v1_050_128Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x3d\x73\xe3\x3a\x0c\xec\xf9\x2b\xf0\x03\x62\xca\xd2\x73\x1c\x3f\x15\xaf\x7a\xcd\x15\x77\x69\xd2\xdd\xdc\x68\x60\x12\xb2\x78\xa1\x48\x0e\x08\xd9\x71\x7e\xfd\x0d\x29\x4f\x3e\xe6\x9a\x34\x1a\x41\xdc\x5d\x68\x17\x90\x02\xce\xd4\xc3\xf7\x78\x74\x9e\x7e\x90\xa8\x91\x71\xa6\x4b\xe4\xe7\x5e\x01\xac\x87\x4f\x14\x72\xe4\xd1\xc7\x8b\x02\x38\x13\x67\x17\x43\x0f\xad\xee\xd4\x87\x62\xab\xef\xb7\xba\xed\x0e\xca\xc4\x20\xe8\x02\x71\x11\xc0\xd9\xee\x77\xe5\x06\xe0\x94\x96\x1e\x18\x5d\xe2\xf8\x9b\x8c\x34\x06\x79\xf6\x1b\x79\xd3\xee\x2b\x76\x63\xd2\x52\xe1\xe6\x6b\xf0\x53\x85\xa7\x64\xf6\x3b\x4f\xfd\xd7\x98\x37\xf4\x8d\xfb\x85\x37\xfb\x48\xb0\x94\x0d\xbb\x24\xd5\xf6\x7f\x0a\xde\xa3\xcb\x80\x4c\x90\x67\xf4\xfe\x0e\x7c\xbc\x6c\x3c\x0a\x05\x73\x5d\x8b\x14\x2f\xc4\x30\x47\x4b\x3e\x43\xc2\x92\xb2\x10\xbb\x57\xb2\x20\x11\x66\x22\x01\x99\x08\x98\x72\x5c\xd8\x10\x98\x18\xb2\x30\xba\x20\x19\xe2\x08\x08\x67\x64\x47\x72\x2d\xc5\x92\x09\x0c\x66\xca\x5a\x01\x3c\x4d\x2e\x43\x20\x29\x33\xab\x2c\x97\x57\x4a\xdb\x1d\xc0\xe3\x95\x38\x03\x06\x0b\x68\x26\x47\x67\xca\x70\xbf\xd7\x1d\x48\x4c\x9b\xb6\x3e\x7f\xf8\x57\xef\x6b\x79\x0f\x68\xcc\xc2\x68\xae\x5a\x31\x8d\xc4\x14\x0c\xe5\x92\xe9\x06\x26\x91\x94\xfb\xa6\x41\x7e\x71\x67\x1d\xf9\xd4\x24\x3b\x36\xed\xc3\x76\xa7\xb7\xbb\xc3\xbe\xd5\xc9\x8e\xca\x3b\x43\x21\x97\x85\x79\xfc\xff\x51\xb9\x90\x16\xb9\xd1\xe5\x9a\xa8\x07\x37\xe3\x89\x6a\xe2\x9f\x42\x2c\xb6\x2b\xf8\x03\xe0\x2d\xa0\xbc\xce\x14\xc0\xba\x99\x42\x59\xb6\xdc\xc3\xcf\xf6\x0e\xfe\xb9\x83\xae\xdb\xd5\xcb\x2f\x15\x17\x49\x8b\x14\xe8\xda\x69\x24\x94\x85\x8b\xd4\xa7\x4e\x18\x60\x45\xae\x9d\x4a\x6a\xe0\xf1\x48\x5e\xfd\xdd\xf1\x26\x91\x87\x85\x7d\x5f\xfd\xf7\x4d\x63\x51\x50\xdb\xd9\x1b\x3d\xfb\x66\x7e\x09\x24\xcd\x3a\xd1\xa6\x0a\x96\x3a\x5f\x43\x26\xd1\xf2\x22\xaa\x1e\x15\x35\x33\x91\x79\x4e\xd1\x05\x79\x57\x8a\x97\xe0\x23\x5a\xfd\xbe\x66\x35\xd6\x9b\xdc\x5c\x97\x2a\x90\x0c\xe7\x76\x28\x9f\xd6\xd0\x76\x87\xa1\xdb\xb6\x0f\xc3\x76\x3f\xb4\x3b\x2d\xc8\xfa\xf4\xaa\x00\x5c\x1e\x90\xcd\xe4\xce\xd4\x83\xf0\x42\x0a\x45\xd8\x1d\x17\x59\x47\x37\x63\x70\x23\x65\x19\x70\x91\x29\x72\x0f\x78\xb4\x8b\xb7\x25\x29\x46\xe7\x5d\x38\x0d\xc5\x54\x26\xe9\xe1\x5b\xf1\x50\xfe\x01\x93\xb3\x96\xc2\x4d\xef\x4f\x00\x00\x00\xff\xff\x76\xbf\x46\x6a\x21\x04\x00\x00"

func mobilenet_v1_050_128YmlBytes() ([]byte, error) {
	return bindataRead(
		_mobilenet_v1_050_128Yml,
		"MobileNet_v1_0.50_128.yml",
	)
}

func mobilenet_v1_050_128Yml() (*asset, error) {
	bytes, err := mobilenet_v1_050_128YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MobileNet_v1_0.50_128.yml", size: 1057, mode: os.FileMode(420), modTime: time.Unix(1501698979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mobilenet_v1_050_224Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x3d\x73\xe3\x38\x0c\xed\xf9\x2b\xf0\x03\x62\xca\xd2\x29\x4e\x46\xc5\x55\xd7\x5c\x71\x97\x26\xdd\xce\x8e\x06\x26\x21\x8b\x1b\x8a\xe4\x80\x90\x1d\xe7\xd7\xef\x90\xf2\xe4\x63\xb6\x49\xa3\x11\xc4\xf7\x1e\xf4\x1e\x20\x05\x5c\x68\x80\xff\xe2\xd1\x79\xfa\x9f\x44\x4d\x8c\x0b\x5d\x22\xbf\x0c\x0a\x60\x3b\x7c\xa6\x90\x23\x4f\x3e\x5e\x14\xc0\x99\x38\xbb\x18\x06\x68\x75\xa7\x3e\x15\x7b\x7d\xbf\xd7\x5d\xd7\x2b\x13\x83\xa0\x0b\xc4\x45\x00\x17\x7b\xe8\xcb\x0d\xc0\x29\xad\x03\x30\xba\xc4\xf1\x17\x19\x69\x0c\xf2\xe2\x77\xf2\xae\x3d\x54\xec\xce\xa4\xb5\xc2\xcd\xf7\xe0\xa7\x0a\x4f\xc9\x1c\x7a\x4f\xc3\xf7\x98\x37\xf4\x8d\xfb\x8d\x37\xfb\x4c\xb0\x94\x0d\xbb\x24\xd5\xf6\xdf\x0a\x3e\xa2\xcb\x80\x4c\x90\x17\xf4\xfe\x0e\x7c\xbc\xec\x3c\x0a\x05\x73\xdd\x8a\x14\x2f\xc4\xb0\x44\x4b\x3e\x43\xc2\x92\xb2\x10\xbb\x37\xb2\x20\x11\x16\x22\x01\x99\x09\x98\x72\x5c\xd9\x10\x98\x18\xb2\x30\xba\x20\x19\xe2\x04\x08\x67\x64\x47\x72\x2d\xc5\x9a\x09\x0c\x66\xca\x5a\x01\x3c\xcf\x2e\x43\x20\x29\x33\xab\x2c\x97\x37\x4a\xd7\xf5\xe0\xf1\x4a\x9c\x01\x83\x05\x34\xb3\xa3\x33\x65\x38\xf4\x7a\x0f\x12\xd3\xae\xad\xcf\x1f\xef\x75\x5f\xcb\x7b\x40\x63\x56\x46\x73\xd5\x8a\x69\x22\xa6\x60\x28\x97\x4c\x77\x30\x8b\xa4\x3c\x34\x0d\xf2\xab\x3b\xeb\xc8\xa7\x26\xd9\xa9\x69\x1f\xf6\xbd\xde\xf7\x8f\x87\x56\x27\x3b\x29\xef\x0c\x85\x5c\x16\xe6\xe9\x9f\x27\xe5\x42\x5a\xe5\x46\x97\x6b\xa2\x01\xdc\x82\x27\xaa\x89\x7f\x09\xb1\xd8\xae\xe0\x4f\x80\xf7\x80\xf2\x36\x53\x00\xeb\x16\x0a\x65\xd9\xf2\x00\x3f\xda\x3b\xf8\xeb\xae\x18\xac\x97\x9f\x2a\xae\x92\x56\x29\xd0\xad\xd3\x44\x28\x2b\x17\xa9\x2f\x9d\x30\xc0\x86\xdc\x3a\x95\xd4\xc0\xe3\x91\xbc\xfa\xb3\xe3\x4d\x22\x8f\x2b\xfb\xa1\xfa\x1f\x9a\xc6\xa2\xa0\xb6\x8b\x37\x7a\xf1\xcd\xf2\x1a\x48\x9a\x6d\xa2\x4d\x15\x2c\x75\xbe\x86\x4c\xa2\xe5\x55\x54\x3d\x2a\x6a\x66\x26\xf3\x92\xa2\x0b\xf2\xa1\x14\x2f\xc1\x47\xb4\xfa\x63\xcd\x6a\xac\x37\xb9\xa5\x2e\x55\x20\x19\xcf\xed\x58\x3e\xad\xb1\xeb\xfa\xb1\xdb\xb7\x0f\xe3\xfe\x30\xb6\xbd\x16\x64\x7d\x7a\x53\x00\x2e\x8f\xc8\x66\x76\x67\x1a\x40\x78\x25\x85\x22\xec\x8e\xab\x6c\xa3\x5b\x30\xb8\x89\xb2\x8c\xb8\xca\x1c\x79\x00\x3c\xda\xd5\xdb\x92\x14\xa3\xf3\x2e\x9c\xc6\x62\x2a\x93\x0c\xf0\x6f\xf1\x50\xfe\x01\xb3\xb3\x96\xc2\x4d\xef\x77\x00\x00\x00\xff\xff\x21\xdc\x4d\xd0\x21\x04\x00\x00"

func mobilenet_v1_050_224YmlBytes() ([]byte, error) {
	return bindataRead(
		_mobilenet_v1_050_224Yml,
		"MobileNet_v1_0.50_224.yml",
	)
}

func mobilenet_v1_050_224Yml() (*asset, error) {
	bytes, err := mobilenet_v1_050_224YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MobileNet_v1_0.50_224.yml", size: 1057, mode: os.FileMode(420), modTime: time.Unix(1501698979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mobilenet_v1_075_128Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x3d\x73\xe3\x3a\x0c\xec\xf9\x2b\xf0\x03\x62\xca\x52\x1c\xc7\xa3\xe2\x55\xaf\x79\xc5\xbb\x34\xe9\x6e\x6e\x34\x30\x09\x59\xbc\x50\x24\x07\x84\xec\x38\xbf\xfe\x86\x94\x27\x1f\x73\x4d\x1a\x8d\x20\xee\x2e\xb4\x0b\x48\x01\x67\xea\xe1\xff\x78\x74\x9e\x7e\x90\xa8\x91\x71\xa6\x4b\xe4\x97\x5e\x01\xac\x87\xcf\x14\x72\xe4\xd1\xc7\x8b\x02\x38\x13\x67\x17\x43\x0f\xad\xee\xd4\xa7\x62\xab\x1f\x1f\x74\xdb\x1d\x94\x89\x41\xd0\x05\xe2\x22\x80\xb3\xdd\xef\xca\x0d\xc0\x29\x2d\x3d\x30\xba\xc4\xf1\x37\x19\x69\x0c\xf2\xec\x37\xf2\xae\xdd\x57\xec\xc6\xa4\xa5\xc2\xcd\xf7\xe0\xa7\x0a\x4f\xc9\xec\x77\x9e\xfa\xef\x31\x6f\xe8\x1b\xf7\x1b\x6f\xf6\x99\x60\x29\x1b\x76\x49\xaa\xed\x7f\x14\x7c\x44\x97\x01\x99\x20\xcf\xe8\xfd\x1d\xf8\x78\xd9\x78\x14\x0a\xe6\xba\x16\x29\x5e\x88\x61\x8e\x96\x7c\x86\x84\x25\x65\x21\x76\x6f\x64\x41\x22\xcc\x44\x02\x32\x11\x30\xe5\xb8\xb0\x21\x30\x31\x64\x61\x74\x41\x32\xc4\x11\x10\xce\xc8\x8e\xe4\x5a\x8a\x25\x13\x18\xcc\x94\xb5\x02\x78\x9e\x5c\x86\x40\x52\x66\x56\x59\x2e\xaf\x94\xb6\x3b\x80\xc7\x2b\x71\x06\x0c\x16\xd0\x4c\x8e\xce\x94\x61\xdf\xea\x03\x48\x4c\x9b\xb6\x3e\x3f\xdc\xeb\x7d\x2d\x1f\x00\x8d\x59\x18\xcd\x55\x2b\xa6\x91\x98\x82\xa1\x5c\x32\xdd\xc0\x24\x92\x72\xdf\x34\xc8\xaf\xee\xac\x23\x9f\x9a\x64\xc7\xa6\x7d\xdc\xee\xf4\x76\x77\xd8\xb7\x3a\xd9\x51\x79\x67\x28\xe4\xb2\x30\x4f\xff\x3e\x29\x17\xd2\x22\x37\xba\x5c\x13\xf5\xe0\x66\x3c\x51\x4d\xfc\x4b\x88\xc5\x76\x05\x7f\x02\xbc\x07\x94\xd7\x99\x02\x58\x37\x53\x28\xcb\x96\x7b\xf8\xd9\xde\xc1\xfd\x1d\x74\xdd\xae\x5e\x7e\xa9\xb8\x48\x5a\xa4\x40\xd7\x4e\x23\xa1\x2c\x5c\xa4\xbe\x74\xc2\x00\x2b\x72\xed\x54\x52\x03\x8f\x47\xf2\xea\xef\x8e\x37\x89\x3c\x2c\xec\xfb\xea\xbf\x6f\x1a\x8b\x82\xda\xce\xde\xe8\xd9\x37\xf3\x6b\x20\x69\xd6\x89\x36\x55\xb0\xd4\xf9\x1a\x32\x89\x96\x57\x51\xf5\xa8\xa8\x99\x89\xcc\x4b\x8a\x2e\xc8\x87\x52\xbc\x04\x1f\xd1\xea\x8f\x35\xab\xb1\xde\xe4\xe6\xba\x54\x81\x64\x38\xb7\x43\xf9\xb4\x86\xb6\x3b\x0c\xdd\xb6\x7d\x1c\xb6\xfb\xa1\xdd\x69\x41\xd6\xa7\x37\x05\xe0\xf2\x80\x6c\x26\x77\xa6\x1e\x84\x17\x52\x28\xc2\xee\xb8\xc8\x3a\xba\x19\x83\x1b\x29\xcb\x80\x8b\x4c\x91\x7b\xc0\xa3\x5d\xbc\x2d\x49\x31\x3a\xef\xc2\x69\x28\xa6\x32\x49\x0f\xff\x15\x0f\xe5\x1f\x30\x39\x6b\x29\xdc\xf4\xfe\x04\x00\x00\xff\xff\x80\x22\x7c\x5b\x21\x04\x00\x00"

func mobilenet_v1_075_128YmlBytes() ([]byte, error) {
	return bindataRead(
		_mobilenet_v1_075_128Yml,
		"MobileNet_v1_0.75_128.yml",
	)
}

func mobilenet_v1_075_128Yml() (*asset, error) {
	bytes, err := mobilenet_v1_075_128YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MobileNet_v1_0.75_128.yml", size: 1057, mode: os.FileMode(420), modTime: time.Unix(1501698979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mobilenet_v1_075_224Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x3d\x73\xc3\x36\x0c\xdd\xf9\x2b\xf0\x03\x62\xca\x52\x15\x3b\xd5\xd0\xa9\x4b\x87\x36\x4b\xb6\x5e\x4f\x07\x93\x90\xc5\x86\x22\x79\x20\x64\xc7\xf9\xf5\x3d\x52\xbe\x7c\x5c\x97\x2c\x3a\x41\x7c\xef\x41\xef\x01\x52\xc0\x85\x06\xf8\x33\x9e\x9c\xa7\xbf\x48\xd4\xc4\xb8\xd0\x35\xf2\xeb\xa0\x00\xb6\xc3\x17\x0a\x39\xf2\xe4\xe3\x55\x01\x5c\x88\xb3\x8b\x61\x80\x56\x77\xea\x4b\xb1\xd7\xc7\x47\xdd\x75\xbd\x32\x31\x08\xba\x40\x5c\x04\x70\xb1\x87\xbe\xdc\x00\x9c\xd3\x3a\x00\xa3\x4b\x1c\xff\x25\x23\x8d\x41\x5e\xfc\x4e\x3e\xb4\x87\x8a\xdd\x99\xb4\x56\xb8\xf9\x19\xfc\x5c\xe1\x29\x99\x43\xef\x69\xf8\x19\xf3\x8e\xbe\x73\x7f\xf0\x66\x5f\x09\x96\xb2\x61\x97\xa4\xda\xfe\x4d\xc1\x67\x74\x19\x90\x09\xf2\x82\xde\x3f\x80\x8f\xd7\x9d\x47\xa1\x60\x6e\x5b\x91\xe2\x95\x18\x96\x68\xc9\x67\x48\x58\x52\x16\x62\xf7\x4e\x16\x24\xc2\x42\x24\x20\x33\x01\x53\x8e\x2b\x1b\x02\x13\x43\x16\x46\x17\x24\x43\x9c\x00\xe1\x82\xec\x48\x6e\xa5\x58\x33\x81\xc1\x4c\x59\x2b\x80\x97\xd9\x65\x08\x24\x65\x66\x95\xe5\xf2\x46\xe9\xba\x1e\x3c\xde\x88\x33\x60\xb0\x80\x66\x76\x74\xa1\x0c\xc7\xbd\x3e\x82\xc4\xb4\x6b\xeb\xf3\xa7\x5f\xf5\x63\x2d\x1f\x01\x8d\x59\x19\xcd\x4d\x2b\xa6\x89\x98\x82\xa1\x5c\x32\xdd\xc1\x2c\x92\xf2\xd0\x34\xc8\x6f\xee\xa2\x23\x9f\x9b\x64\xa7\xa6\x3d\xee\x7b\xbd\xef\x9f\x0e\xad\x4e\x76\x52\xde\x19\x0a\xb9\x2c\xcc\xf3\xef\xcf\xca\x85\xb4\xca\x9d\x2e\xb7\x44\x03\xb8\x05\xcf\x54\x13\xff\x16\x62\xb1\x5d\xc1\x5f\x00\x1f\x01\xe5\x6d\xa6\x00\xd6\x2d\x14\xca\xb2\xe5\x01\xfe\x6e\x1f\xe0\x97\x87\x62\xb0\x5e\xfe\x51\x71\x95\xb4\x4a\x81\x6e\x9d\x26\x42\x59\xb9\x48\x7d\xeb\x84\x01\x36\xe4\xd6\xa9\xa4\x06\x1e\x4f\xe4\xd5\xff\x3b\xde\x25\xf2\xb8\xb2\x1f\xaa\xff\xa1\x69\x2c\x0a\x6a\xbb\x78\xa3\x17\xdf\x2c\x6f\x81\xa4\xd9\x26\xda\x54\xc1\x52\xe7\x5b\xc8\x24\x5a\xde\x44\xd5\xa3\xa2\x66\x66\x32\xaf\x29\xba\x20\x9f\x4a\xf1\x1a\x7c\x44\xab\x3f\xd7\xac\xc6\x7a\x97\x5b\xea\x52\x05\x92\xf1\xd2\x8e\xe5\xd3\x1a\xbb\xae\x1f\xbb\x7d\x7b\x1c\xf7\x87\xb1\xed\xb5\x20\xeb\xf3\xbb\x02\x70\x79\x44\x36\xb3\xbb\xd0\x00\xc2\x2b\x29\x14\x61\x77\x5a\x65\x1b\xdd\x82\xc1\x4d\x94\x65\xc4\x55\xe6\xc8\x03\xe0\xc9\xae\xde\x96\xa4\x18\x9d\x77\xe1\x3c\x16\x53\x99\x64\x80\x3f\x8a\x87\xf2\x0f\x98\x9d\xb5\x14\xee\x7a\xff\x05\x00\x00\xff\xff\xec\xac\xdb\x6b\x21\x04\x00\x00"

func mobilenet_v1_075_224YmlBytes() ([]byte, error) {
	return bindataRead(
		_mobilenet_v1_075_224Yml,
		"MobileNet_v1_0.75_224.yml",
	)
}

func mobilenet_v1_075_224Yml() (*asset, error) {
	bytes, err := mobilenet_v1_075_224YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MobileNet_v1_0.75_224.yml", size: 1057, mode: os.FileMode(420), modTime: time.Unix(1501698979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mobilenet_v1_10_128Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x3d\x6f\xe3\x3a\x10\xec\xf9\x2b\xf6\x07\xc4\x94\xe5\x28\x8e\xa1\xe2\x55\xaf\x79\xc5\xbb\x34\xe9\x0e\x07\x61\x4d\xae\x2c\x5e\x28\x92\x58\xae\xec\x38\xbf\xfe\x40\xca\xc8\x07\xae\x49\x23\x68\xc5\x99\x59\xcd\xec\x82\x01\x67\xea\xe1\xff\x78\x74\x9e\x7e\x90\xa8\x91\x71\xa6\x4b\xe4\x97\x5e\x01\xac\x87\xcf\x14\x72\xe4\xd1\xc7\x8b\x02\x38\x13\x67\x17\x43\x0f\xad\xde\xa9\x4f\x45\xab\xb7\xba\xdd\x1d\x94\x89\x41\xd0\x05\xe2\xc2\xc7\xd9\xee\xbb\xf2\x02\x70\x4a\x4b\x0f\x8c\x2e\x71\xfc\x4d\x46\x1a\x83\x3c\xfb\x8d\xbc\x4b\xf7\x15\xbb\x31\x69\xa9\x70\xf3\x3d\xf8\xa9\xc2\x53\x32\xfb\xce\x53\xff\x3d\xe6\x0d\x7d\xe3\x7e\xe3\xcf\x3e\x13\x2c\x65\xc3\x2e\x49\x75\xfd\x8f\x82\x8f\xe4\x32\x20\x13\xe4\x19\xbd\xbf\x03\x1f\x2f\x1b\x8f\x42\xc1\x5c\xd7\x22\xc5\x0b\x31\xcc\xd1\x92\xcf\x90\xb0\x84\x2c\xc4\xee\x8d\x2c\x48\x84\x99\x48\x40\x26\x02\xa6\x1c\x17\x36\x04\x26\x86\x2c\x8c\x2e\x48\x86\x38\x02\xc2\x19\xd9\x91\x5c\x4b\xb1\x64\x02\x83\x99\xb2\x56\x00\xcf\x93\xcb\x10\x48\xca\xc8\x2a\xcb\xe5\x95\xd2\xee\x0e\xe0\xf1\x4a\x9c\x01\x83\x05\x34\x93\xa3\x33\x65\xd8\x77\xba\x05\x89\x69\xd3\xd6\xef\x87\x07\x7d\x5f\xcb\x07\x40\x63\x16\x46\x73\xd5\x8a\x69\x24\xa6\x60\x28\x97\x4c\x37\x30\x89\xa4\xdc\x37\x0d\xf2\xab\x3b\xeb\xc8\xa7\x26\xd9\xb1\x69\x1f\xb7\x9d\xde\x76\x87\x7d\xab\x93\x1d\x95\x77\x86\x42\x2e\xfb\xf2\xf4\xef\x93\x72\x21\x2d\x72\xa3\xcb\x35\x51\x0f\x6e\xc6\x13\xd5\xc4\xbf\x84\x58\x6c\x57\xf0\x27\xc0\x7b\x40\x79\x9d\x29\x80\x75\x33\x85\xb2\x6b\xb9\x87\x9f\xed\x1d\xdc\xdf\xc1\x6e\xd7\xd5\xc7\x2f\x15\x17\x49\x8b\x14\xe8\xda\x69\x24\x94\x85\x8b\xd4\x97\x4e\x18\x60\x45\xae\x9d\x4a\x6a\xe0\xf1\x48\x5e\xfd\xdd\xf1\x26\x91\x87\x85\x7d\x5f\xfd\xf7\x4d\x63\x51\x50\xdb\xd9\x1b\x3d\xfb\x66\x7e\x0d\x24\xcd\x3a\xd1\xa6\x0a\x96\x3a\x5f\x43\x26\xd1\xf2\x2a\xaa\x1e\x15\x35\x33\x91\x79\x49\xd1\x05\xf9\x50\x8a\x97\xe0\x23\x5a\xfd\xb1\x66\x35\xd6\x9b\xdc\x5c\x97\x2a\x90\x0c\xe7\x76\x68\xf5\x76\x68\x77\x87\x61\xb7\x6d\x1f\x87\xed\x7e\x68\x3b\x2d\xc8\xfa\xf4\xa6\x00\x5c\x1e\x90\xcd\xe4\xce\xd4\x83\xf0\x42\x0a\x45\xd8\x1d\x17\x59\x27\x37\x63\x70\x23\x65\x19\x70\x91\x29\x72\x0f\x78\xb4\x8b\xb7\x25\x28\x46\xe7\x5d\x38\x0d\xc5\x53\x26\xe9\xe1\xbf\x62\xa1\xdc\x00\x93\xb3\x96\xc2\x4d\xef\x4f\x00\x00\x00\xff\xff\x57\xa8\x8a\x32\x1f\x04\x00\x00"

func mobilenet_v1_10_128YmlBytes() ([]byte, error) {
	return bindataRead(
		_mobilenet_v1_10_128Yml,
		"MobileNet_v1_1.0_128.yml",
	)
}

func mobilenet_v1_10_128Yml() (*asset, error) {
	bytes, err := mobilenet_v1_10_128YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MobileNet_v1_1.0_128.yml", size: 1055, mode: os.FileMode(420), modTime: time.Unix(1501698979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mobilenet_v1_10_224Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x3d\x73\xc3\x36\x0c\xdd\xf9\x2b\xf0\x03\x62\xca\x52\x15\x3b\xd5\xd0\xa9\x4b\x87\x36\x4b\xb6\x5e\x4f\x07\x93\x90\xc5\x86\x22\x79\x20\x64\xc7\xf9\xf5\x3d\x52\xbe\x7c\x5c\x97\x2c\x3a\x41\x7c\xef\x41\xef\x01\xc7\x80\x0b\x0d\xf0\x67\x3c\x39\x4f\x7f\x91\xa8\x89\x71\xa1\x6b\xe4\xd7\x41\x01\x6c\x87\x2f\x14\x72\xe4\xc9\xc7\xab\x02\xb8\x10\x67\x17\xc3\x00\xad\xee\xd4\x97\xa2\xd5\x7b\xdd\x75\xbd\x32\x31\x08\xba\x40\x5c\xf8\xb8\xd8\x43\x5f\x5e\x00\xce\x69\x1d\x80\xd1\x25\x8e\xff\x92\x91\xc6\x20\x2f\x7e\x27\x1f\xd2\x43\xc5\xee\x4c\x5a\x2b\xdc\xfc\x0c\x7e\xae\xf0\x94\xcc\xa1\xf7\x34\xfc\x8c\x79\x47\xdf\xb9\x3f\xf8\xb3\xaf\x04\x4b\xd9\xb0\x4b\x52\x5d\xff\xa6\xe0\x33\xb9\x0c\xc8\x04\x79\x41\xef\x1f\xc0\xc7\xeb\xce\xa3\x50\x30\xb7\xad\x48\xf1\x4a\x0c\x4b\xb4\xe4\x33\x24\x2c\x21\x0b\xb1\x7b\x27\x0b\x12\x61\x21\x12\x90\x99\x80\x29\xc7\x95\x0d\x81\x89\x21\x0b\xa3\x0b\x92\x21\x4e\x80\x70\x41\x76\x24\xb7\x52\xac\x99\xc0\x60\xa6\xac\x15\xc0\xcb\xec\x32\x04\x92\x32\xb2\xca\x72\x79\xa3\x74\x5d\x0f\x1e\x6f\xc4\x19\x30\x58\x40\x33\x3b\xba\x50\x86\xe3\x5e\x1f\x41\x62\xda\xb5\xf5\xfb\xd3\xaf\xfa\xb1\x96\x8f\x80\xc6\xac\x8c\xe6\xa6\x15\xd3\x44\x4c\xc1\x50\x2e\x99\xee\x60\x16\x49\x79\x68\x1a\xe4\x37\x77\xd1\x91\xcf\x4d\xb2\x53\xd3\x1e\xf7\xbd\xde\xf7\x4f\x87\x56\x27\x3b\x29\xef\x0c\x85\x5c\xf6\xe5\xf9\xf7\x67\xe5\x42\x5a\xe5\x4e\x97\x5b\xa2\x01\xdc\x82\x67\xaa\x89\x7f\x0b\xb1\xd8\xae\xe0\x2f\x80\x8f\x80\xf2\x36\x53\x00\xeb\x16\x0a\x65\xd7\xf2\x00\x7f\xb7\x0f\xf0\xcb\x43\x31\x58\x1f\xff\xa8\xb8\x4a\x5a\xa5\x40\xb7\x4e\x13\xa1\xac\x5c\xa4\xbe\x75\xc2\x00\x1b\x72\xeb\x54\x52\x03\x8f\x27\xf2\xea\xff\x1d\xef\x12\x79\x5c\xd9\x0f\xd5\xff\xd0\x34\x16\x05\xb5\x5d\xbc\xd1\x8b\x6f\x96\xb7\x40\xd2\x6c\x13\x6d\xaa\x60\xa9\xf3\x2d\x64\x12\x2d\x6f\xa2\xea\x51\x51\x33\x33\x99\xd7\x14\x5d\x90\x4f\xa5\x78\x0d\x3e\xa2\xd5\x9f\x6b\x56\x63\xbd\xcb\x2d\x75\xa9\x02\xc9\x78\x69\xc7\x56\xef\xc7\xae\xeb\xc7\x6e\xdf\x1e\xc7\xfd\x61\x6c\x7b\x2d\xc8\xfa\xfc\xae\x00\x5c\x1e\x91\xcd\xec\x2e\x34\x80\xf0\x4a\x0a\x45\xd8\x9d\x56\xd9\x26\xb7\x60\x70\x13\x65\x19\x71\x95\x39\xf2\x00\x78\xb2\xab\xb7\x25\x28\x46\xe7\x5d\x38\x8f\xc5\x53\x26\x19\xe0\x8f\x62\xa1\xdc\x00\xb3\xb3\x96\xc2\x5d\xef\xbf\x00\x00\x00\xff\xff\x03\xe2\xec\xf4\x1f\x04\x00\x00"

func mobilenet_v1_10_224YmlBytes() ([]byte, error) {
	return bindataRead(
		_mobilenet_v1_10_224Yml,
		"MobileNet_v1_1.0_224.yml",
	)
}

func mobilenet_v1_10_224Yml() (*asset, error) {
	bytes, err := mobilenet_v1_10_224YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MobileNet_v1_1.0_224.yml", size: 1055, mode: os.FileMode(420), modTime: time.Unix(1501698979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resnet152Yaml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xcf\x6e\xdb\x30\x0c\xc6\xef\x7a\x0a\x3e\x40\x23\xc7\x4e\x9d\x65\x3e\x0c\x18\xb6\x4b\x81\xa1\x05\xba\x62\x97\x61\x30\x18\x89\x8e\xb5\xca\x92\x20\x51\x49\xb3\xa7\x1f\x64\x67\xfd\x83\x5d\x7a\x09\x22\xeb\xfb\x7e\x24\x3f\xd1\xe1\x44\x1d\xdc\x53\xba\x25\xae\xdb\x46\x0c\x11\x27\x3a\xf9\xf8\xd8\x09\x80\xe5\xf2\x81\x5c\xf2\x71\xb0\xfe\x24\x00\x8e\x14\x93\xf1\xae\x83\x5a\x36\xe2\xd5\x61\x2d\x94\x77\x8c\xc6\x51\x2c\x4e\x9c\xf4\xf6\xba\xfc\x01\x38\x84\xdc\x41\x44\x13\xa2\xff\x4d\x8a\x2b\x85\x71\xb2\x2b\x7e\x86\x76\xb3\x76\xa5\x42\x9e\xe5\xea\x7d\xf2\xc3\x2c\x0f\x41\x6d\xaf\x2d\x75\xef\x73\x5e\xd4\x17\xef\x3b\x3a\x7b\x6d\xd0\x94\x54\x34\x81\xe7\x79\x3f\x09\x80\xcf\x0e\xcc\x84\x07\x5a\x29\x8b\x29\x99\xc1\x28\x2c\x97\xe0\x88\x4b\x7e\xb0\xcf\xc6\x32\xf8\x01\x2c\x9e\x29\x26\xe0\x11\x19\x2c\x61\x74\x10\x29\x19\x9d\xd1\xc2\x90\x9d\x2a\xa6\x04\x27\x19\x25\x2f\x52\x30\x2e\x64\x4e\x52\x00\x3c\x8c\x26\x3d\x03\x95\x77\xc9\x24\x4e\x85\x59\xb7\xcd\x3f\x2e\x3a\x0d\xa8\x46\x43\x47\x4a\xf0\x61\x2b\x77\xc0\x3e\xac\xea\xf9\xfb\xc7\x8d\x6c\xe6\x63\x0b\xa8\x54\x8e\xa8\xce\xe0\x1d\xdc\x7c\xfb\xfe\xe3\xfe\xcb\xaa\x59\xd7\xad\x14\x91\x06\x8a\xe4\x14\xa5\x12\xe3\x0a\x46\xe6\x90\xba\xaa\xc2\xf8\x64\x8e\xd2\xc7\x43\x15\xf4\x50\xd5\x6d\xdd\xc8\xf5\x66\xb3\x6b\x65\xd0\x83\xb0\x46\x91\x4b\x65\x39\xee\xbe\xde\x89\xa5\xe1\xc5\xce\xe7\x40\xdd\x92\xcc\x1c\xf2\x9b\xdc\x78\xa4\x65\xba\x57\x82\x80\x65\xe5\x98\x62\x5a\x9e\x11\x40\x9b\x89\x5c\x59\xac\xd4\xc1\xcf\xfa\x0a\x36\x57\xd0\x34\xd7\xf3\xcf\x2f\xe1\x33\x87\xcc\x45\xba\x54\x1a\x08\x39\xc7\x82\x7a\x53\x09\x1d\x2c\xca\xa5\x52\x09\x11\x2c\xee\xc9\x8a\xff\x2b\x5e\x10\xa9\xcf\xd1\x76\xf3\xfc\x5d\x55\x69\x64\x94\x7a\xb2\x4a\x4e\xb6\x9a\x9e\x1c\x71\x35\x79\x4d\x36\x55\x33\xb0\x9c\xd3\xd9\x25\x62\xc9\x4f\x2c\xe6\xab\x42\x53\x23\xa9\xc7\xe0\x8d\xe3\x17\x92\x3f\x39\xeb\x51\xcb\x97\xcd\x9a\x63\xbd\xe0\x22\x25\x47\xdc\x1f\xeb\xbe\x6e\x9b\xbe\x59\xd7\xdb\x7e\xbd\xeb\x9b\x9d\x64\x8c\xf2\xf0\x47\x00\x98\xd4\x63\x54\xa3\x39\x52\x07\x1c\x33\x09\x64\x8e\x66\x9f\x79\x79\xb2\x09\x9d\x19\x28\x71\x8f\x99\x47\x1f\x3b\xc0\xbd\xce\x56\x97\x84\x22\x1a\x6b\xdc\xa1\x2f\xc3\x24\xe2\x0e\x6e\x4a\xef\xb7\xc4\x62\x34\x5a\x93\xbb\xf0\xfe\x06\x00\x00\xff\xff\x97\x96\x27\x56\x05\x04\x00\x00"

func resnet152YamlBytes() ([]byte, error) {
	return bindataRead(
		_resnet152Yaml,
		"resnet152.yaml",
	)
}

func resnet152Yaml() (*asset, error) {
	bytes, err := resnet152YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resnet152.yaml", size: 1029, mode: os.FileMode(420), modTime: time.Unix(1501698979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resnet50Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4d\x6e\xdb\x30\x10\x85\xf7\x3c\xc5\x1c\x20\xa6\x7e\x12\xa5\xa9\x16\x05\x8a\x76\x13\xa0\x48\x80\x34\xe8\xa6\x28\x84\x31\x39\xb2\xd8\x50\x24\x41\x0e\xed\xb8\xa7\x2f\x28\xb9\xf9\x41\x37\xde\x18\xa6\xf8\xde\x37\x33\x8f\xe3\x70\xa6\x1e\x1e\x28\xdd\x11\x77\xb5\x18\x23\xce\x74\xf0\xf1\xa9\x17\x00\xeb\xdd\x23\xb9\xe4\xe3\x68\xfd\x41\x00\xec\x29\x26\xe3\x5d\x0f\x8d\x6c\xc5\x9b\x43\x2d\x94\x77\x8c\xc6\x51\x2c\x4e\x9c\xf5\xf5\x55\xf9\x03\xb0\x0b\xb9\x87\x88\x26\x44\xff\x9b\x14\x57\x0a\xe3\x6c\x37\xfc\x02\xed\x17\xed\x46\x85\xbc\xc8\xd5\x79\xf2\xdd\x22\x0f\x41\x5d\x5f\x59\xea\xcf\x73\x9e\xd4\x27\xef\x19\x9d\xbd\x35\x68\x4a\x2a\x9a\xc0\xcb\xbc\x9f\x04\xc0\x67\x07\x66\xc6\x1d\x6d\x94\xc5\x94\xcc\x68\x14\x96\x4b\x70\xc4\x25\x3f\xd8\x66\x63\x19\xfc\x08\x16\x8f\x14\x13\xf0\x84\x0c\x96\x30\x3a\x88\x94\x8c\xce\x68\x61\xcc\x4e\x15\x53\x82\x83\x8c\x92\x57\x29\x18\x17\x32\x27\x29\x00\x1e\x27\x93\x5e\x80\xca\xbb\x64\x12\xa7\xc2\xec\xea\x7f\x58\x74\x1a\x50\x4d\x86\xf6\x94\xe0\x43\x27\x5b\x60\x1f\x36\xcd\xf2\xfd\x63\x7b\x3a\x76\x80\x4a\xe5\x88\xea\x08\xde\xc1\xed\xb7\xef\x3f\x1e\xbe\x6c\xda\xba\xe9\xa4\x88\x34\x52\x24\xa7\x28\x95\x14\x37\x30\x31\x87\xd4\x57\x15\xc6\x67\xb3\x97\x3e\xee\xaa\xa0\xc7\xaa\xe9\x9a\x56\xd6\x97\x97\x37\x9d\x0c\x7a\x14\xd6\x28\x72\xa9\xec\xc6\xfd\xd7\x7b\xb1\xf6\xbb\xda\xf9\x18\xa8\x5f\x83\x59\x32\x7e\x17\x1b\x4f\xb4\x0e\xf7\x46\x10\xb0\x6c\x1c\x53\x4c\xeb\x2b\x02\x68\x33\x93\x2b\x7b\x95\x7a\xf8\xd9\x5c\xc0\xe5\x05\xb4\xed\xd5\xf2\xf3\x4b\xf8\xcc\x21\x73\x91\xae\x95\x46\x42\xce\xb1\xa0\xde\x55\x42\x07\xab\x72\xad\x54\x32\x04\x8b\x5b\xb2\xe2\xff\x8a\x27\x44\x1a\x72\xb4\xfd\x32\x7f\x5f\x55\x1a\x19\xa5\x9e\xad\x92\xb3\xad\xe6\x67\x47\x5c\xcd\x5e\x93\x4d\xd5\x02\x2c\xe7\x74\x74\x89\x58\xf2\x33\x8b\xe5\xaa\xd0\xd4\x44\xea\x29\x78\xe3\xf8\x95\xe4\x0f\xce\x7a\xd4\xf2\x75\xb1\x96\x58\x4f\xb8\x48\xc9\x11\x0f\xfb\x66\xe8\xea\xa1\xad\x9b\xeb\xa1\xbe\x19\xda\x1b\xc9\x18\xe5\xee\x8f\x00\x30\x69\xc0\xa8\x26\xb3\xa7\x1e\x38\x66\x12\xc8\x1c\xcd\x36\xf3\xfa\x62\x33\x3a\x33\x52\xe2\x01\x33\x4f\x3e\xf6\x80\x5b\x9d\xad\x2e\x01\x45\x34\xd6\xb8\xdd\x50\x66\x49\xc4\x3d\xdc\x96\xd6\xef\x88\xc5\x64\xb4\x26\x77\xe2\xfd\x0d\x00\x00\xff\xff\xcf\x35\xc2\x1d\x02\x04\x00\x00"

func resnet50YmlBytes() ([]byte, error) {
	return bindataRead(
		_resnet50Yml,
		"resnet50.yml",
	)
}

func resnet50Yml() (*asset, error) {
	bytes, err := resnet50YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resnet50.yml", size: 1026, mode: os.FileMode(420), modTime: time.Unix(1501698979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vgg19Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x4d\x6f\xdb\x30\x0c\xbd\xeb\x57\xf0\xb2\x5b\x63\xc7\x69\x92\x25\x3a\x0c\x18\x30\xa0\xd8\x65\xbd\x0c\xbb\x0c\x83\xc1\x4a\xb4\xad\x55\x96\x04\x89\xca\xc7\x7e\xfd\x20\xdb\x6b\x53\xec\xd2\x8b\x21\x9a\x8f\x8f\xe4\xe3\x73\x38\x92\x84\x1f\x0f\x0f\xcd\x51\x74\x11\x47\x3a\xfb\xf8\x2c\x05\xc0\x9c\xf8\x4e\x2e\xf9\xd8\x59\x7f\x16\x00\x27\x8a\xc9\x78\x27\xa1\xa9\x36\xe2\x26\x58\x0b\xe5\x1d\xa3\x71\x14\x4b\x25\x8e\x7a\xbf\x2d\x0f\x80\x3e\x64\x09\x11\x4d\x88\xfe\x37\x29\xae\x15\xc6\xd1\xae\xf8\x85\x54\x4e\xd8\x95\x0a\x79\x82\xab\xf7\xc1\xfb\x09\x1e\x82\xda\x6f\x2d\xc9\xf7\x55\x2e\xe8\xa5\xf6\x1d\x93\xdd\x16\x68\x4a\x2a\x9a\xc0\xd3\xbe\x9f\x04\xc0\x67\x07\x66\xc4\x9e\x56\xca\x62\x4a\xa6\x33\x0a\x4b\x12\x94\x77\x27\x6f\x73\x79\xa3\x05\x47\x5c\xd4\xac\x04\xcc\x02\x43\x4e\x94\x00\xff\xfd\x87\xb3\xe1\x01\x9a\x23\x58\xbc\x52\x4c\xe0\x3b\xb8\xbf\xdc\xdf\x72\x40\x67\x2c\x53\x4c\xaf\x0c\xa8\x06\x43\x27\x4a\xf0\xb1\xa9\x9a\x0f\xc0\x3e\xac\x1a\x40\xa7\xe1\x70\xac\x0e\x73\xbc\x03\x54\x2a\x47\x54\x57\xf0\x0e\x78\x20\xf8\x5a\x46\xfd\x46\x0c\x6a\x40\x6b\xc9\xf5\x04\x1a\x19\x13\x31\x18\x07\x9b\x75\xb3\xab\x44\xa4\x8e\x22\x39\x45\xa9\x08\xba\x82\x81\x39\x24\x59\xd7\x18\x2f\xe6\x54\xf9\xd8\xd7\x41\x77\x75\xb3\x5d\x1f\xab\x66\xb7\xdb\x57\x41\x77\xc2\x1a\x45\x2e\x15\x97\x3c\x7e\x79\x14\xc6\x85\xcc\x4b\x35\x5f\x03\xc9\x59\xa2\x49\xed\x37\x02\x96\x91\x26\xf0\x0d\x20\x60\xf1\x5e\xd9\x75\xbe\x27\x80\x36\x23\xb9\xe2\xb0\x24\xe1\x67\x73\x07\xf7\x77\xb0\xd9\x6c\xa7\xcf\x2f\xe1\x33\x87\xcc\x05\x3a\x77\xea\x08\x39\xc7\x42\xf5\xa6\x13\x3a\x98\x91\x73\xa7\x22\x3c\x58\x7c\x22\x2b\xfe\xef\xb8\x50\xa4\x36\x47\x2b\xa7\xf5\x65\x5d\x17\x99\x2a\x3d\x5a\x55\x8d\xb6\x1e\x2f\x8e\xb8\x1e\xbd\x26\x9b\xea\x89\xb0\xc4\xe9\xea\x12\x71\xc5\x17\x16\x53\xaa\xb0\xa9\x81\xd4\x73\xf0\xc6\xf1\x2b\x93\x3f\x3b\xeb\x51\x57\xaf\x16\x9b\x54\x5d\xe8\x4e\x7d\xdf\x36\xc7\x76\xb3\x6e\xf6\xed\xfa\xd0\x6e\x0e\x15\x63\xac\xfa\x3f\x02\xc0\xa4\x16\xa3\x1a\xcc\x89\x24\x70\xcc\x24\x90\x39\x9a\xa7\xcc\xf3\xa9\x46\x74\xa6\xa3\xc4\x2d\x66\x1e\x7c\x94\x80\x4f\x3a\x5b\x5d\xa4\x89\x68\xac\x71\x7d\xbb\x1c\x5b\xbe\x18\x41\x0c\x46\x6b\x72\x0b\xdf\xdf\x00\x00\x00\xff\xff\x7e\xa9\x64\x25\x03\x04\x00\x00"

func vgg19YmlBytes() ([]byte, error) {
	return bindataRead(
		_vgg19Yml,
		"vgg19.yml",
	)
}

func vgg19Yml() (*asset, error) {
	bytes, err := vgg19YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vgg19.yml", size: 1027, mode: os.FileMode(420), modTime: time.Unix(1501698979, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"Inception_5h.yml": inception_5hYml,
	"MobileNet_v1_0.25_128.yml": mobilenet_v1_025_128Yml,
	"MobileNet_v1_0.25_224.yml": mobilenet_v1_025_224Yml,
	"MobileNet_v1_0.50_128.yml": mobilenet_v1_050_128Yml,
	"MobileNet_v1_0.50_224.yml": mobilenet_v1_050_224Yml,
	"MobileNet_v1_0.75_128.yml": mobilenet_v1_075_128Yml,
	"MobileNet_v1_0.75_224.yml": mobilenet_v1_075_224Yml,
	"MobileNet_v1_1.0_128.yml": mobilenet_v1_10_128Yml,
	"MobileNet_v1_1.0_224.yml": mobilenet_v1_10_224Yml,
	"resnet152.yaml": resnet152Yaml,
	"resnet50.yml": resnet50Yml,
	"vgg19.yml": vgg19Yml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"Inception_5h.yml": &bintree{inception_5hYml, map[string]*bintree{}},
	"MobileNet_v1_0.25_128.yml": &bintree{mobilenet_v1_025_128Yml, map[string]*bintree{}},
	"MobileNet_v1_0.25_224.yml": &bintree{mobilenet_v1_025_224Yml, map[string]*bintree{}},
	"MobileNet_v1_0.50_128.yml": &bintree{mobilenet_v1_050_128Yml, map[string]*bintree{}},
	"MobileNet_v1_0.50_224.yml": &bintree{mobilenet_v1_050_224Yml, map[string]*bintree{}},
	"MobileNet_v1_0.75_128.yml": &bintree{mobilenet_v1_075_128Yml, map[string]*bintree{}},
	"MobileNet_v1_0.75_224.yml": &bintree{mobilenet_v1_075_224Yml, map[string]*bintree{}},
	"MobileNet_v1_1.0_128.yml": &bintree{mobilenet_v1_10_128Yml, map[string]*bintree{}},
	"MobileNet_v1_1.0_224.yml": &bintree{mobilenet_v1_10_224Yml, map[string]*bintree{}},
	"resnet152.yaml": &bintree{resnet152Yaml, map[string]*bintree{}},
	"resnet50.yml": &bintree{resnet50Yml, map[string]*bintree{}},
	"vgg19.yml": &bintree{vgg19Yml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

