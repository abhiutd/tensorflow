// Code generated by go-bindata.
// sources:
// builtin_models/MobileNet_v1_0.25_128.yml
// builtin_models/MobileNet_v1_0.25_224.yml
// builtin_models/MobileNet_v1_0.50_128.yml
// builtin_models/MobileNet_v1_0.50_224.yml
// builtin_models/MobileNet_v1_0.75_128.yml
// builtin_models/MobileNet_v1_0.75_224.yml
// builtin_models/MobileNet_v1_1.0_128.yml
// builtin_models/MobileNet_v1_1.0_224.yml
// builtin_models/inception.yml
// builtin_models/resnet152.yaml
// builtin_models/resnet50.yml
// builtin_models/vgg19.yml
// DO NOT EDIT!

package tensorflow

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _mobilenet_v1_025_128Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xbd\x72\xf3\x36\x10\xec\xf1\x14\xf7\x00\x16\x28\xd2\xb2\xac\x61\x91\x2a\x4d\x8a\xc4\x8d\xbb\x4c\x86\x73\x02\x8e\x22\x62\x10\xc0\x1c\x8e\xfa\x71\x91\x67\xcf\x00\xd4\xf8\x67\xbe\xc6\x0d\x87\x47\xec\xee\x71\xf7\x8e\x0c\x38\x53\x0f\x7f\xc6\xa3\xf3\xf4\x17\x89\x1a\x19\x67\xba\x44\x7e\xeb\x15\xc0\x7a\xf8\x4a\x21\x47\x1e\x7d\xbc\x28\x80\x33\x71\x76\x31\xf4\xf0\x5f\xab\x3b\x7d\x55\x1f\x75\xab\xb7\xba\x7b\xd2\x6d\x77\x50\x26\x06\x41\x17\x88\x8b\x06\xce\x76\xbf\x2b\x37\x00\xa7\xb4\xf4\xc0\xe8\x12\xc7\x7f\xc9\x48\x63\x90\x67\xbf\x91\x0f\xf9\xbe\x62\x37\x26\x2d\x15\x6e\x7e\x06\x3f\x55\x78\x4a\x66\xbf\xf3\xd4\xff\x8c\x79\x47\xdf\xb9\x3f\x78\xb3\xaf\x04\x4b\xd9\xb0\x4b\x52\x6d\xff\xa6\xe0\x33\xbd\x0c\xc8\x04\x79\x46\xef\x1f\xc0\xc7\xcb\xc6\xa3\x50\x30\xb7\xb5\x48\xf1\x42\x0c\x73\xb4\xe4\x33\x24\x2c\x41\x0b\xb1\x7b\x27\x0b\x12\x61\x26\x12\x90\x89\x80\x29\xc7\x85\x0d\x81\x89\x21\x0b\xa3\x0b\x92\x21\x8e\x80\x70\x46\x76\x24\xb7\x52\x2c\x99\xc0\x60\xa6\xac\x15\xc0\xeb\xe4\x32\x04\x92\x32\xb6\xca\x72\x79\xa5\xb4\xdd\x01\x3c\xde\x88\x33\x60\xb0\x80\x66\x72\x74\xa6\x0c\xbb\x56\x3f\x82\xc4\xb4\x69\xeb\xf3\xfd\x5e\x77\xb5\x7c\x02\x34\x66\x61\x34\x37\xad\x98\x46\x62\x0a\x86\x72\xc9\x74\x03\x93\x48\xca\x7d\xd3\x20\x5f\xdd\x59\x47\x3e\x35\xc9\x8e\x4d\xfb\xbc\xdd\xe9\xed\xee\xb0\x6f\x75\xb2\xa3\xf2\xce\x50\xc8\x65\x67\x5e\x7e\x7f\x51\x2e\xa4\x45\xee\x74\xb9\x25\xea\xc1\xcd\x78\xa2\x9a\xf8\xb7\x10\x8b\xed\x0a\xfe\x02\xf8\x08\x28\xaf\x33\x05\xb0\x6e\xa6\x50\x96\x2d\xf7\xf0\x77\xfb\x00\x8f\x0f\xd0\x75\xbb\x7a\xf9\x47\xc5\x45\xd2\x22\x05\xba\x76\x1a\x09\x65\xe1\x22\xf5\xad\x13\x06\x58\x91\x6b\xa7\x92\x1a\x78\x3c\x92\x57\xbf\x76\xbc\x4b\xe4\x61\x61\xdf\x57\xff\x7d\xd3\x58\x14\xd4\x76\xf6\x46\xcf\xbe\x99\xaf\x81\xa4\x59\x27\xda\x54\xc1\x52\xe7\x5b\xc8\x24\x5a\xae\xa2\xea\x51\x51\x33\x13\x99\xb7\x14\x5d\x90\x4f\xa5\x78\x09\x3e\xa2\xd5\x9f\x6b\x56\x63\xbd\xcb\xcd\x75\xa9\x02\xc9\x70\x6e\x87\xf2\x69\x0d\x6d\x77\x18\xba\x6d\xfb\x3c\x6c\xf7\x43\xbb\xd3\x82\xac\x4f\xef\x0a\xc0\xe5\x01\xd9\x4c\xee\x4c\x3d\x08\x2f\xa4\x50\x84\xdd\x71\x91\x75\x74\x33\x06\x37\x52\x96\x01\x17\x99\x22\xf7\x80\x47\xbb\x78\x5b\x92\x62\x74\xde\x85\xd3\x50\x4c\x65\x92\x1e\xfe\x28\x1e\xca\x6f\x60\x72\xd6\x52\xb8\xeb\xfd\x1f\x00\x00\xff\xff\xe3\x39\x95\x4d\x24\x04\x00\x00"

func mobilenet_v1_025_128YmlBytes() ([]byte, error) {
	return bindataRead(
		_mobilenet_v1_025_128Yml,
		"MobileNet_v1_0.25_128.yml",
	)
}

func mobilenet_v1_025_128Yml() (*asset, error) {
	bytes, err := mobilenet_v1_025_128YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MobileNet_v1_0.25_128.yml", size: 1060, mode: os.FileMode(420), modTime: time.Unix(1501597766, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mobilenet_v1_025_224Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xbd\x8e\xf4\x36\x0c\xec\xf5\x14\x7c\x80\x5b\x79\xed\x78\xf7\x02\x17\xa9\xd2\xa4\x48\xbe\xe6\xba\x20\x30\xb8\x12\xbd\x56\x4e\x96\x04\x8a\xde\x9f\x2b\xf2\xec\x81\xe4\xc5\xfd\xe0\x6b\xae\x31\x4c\x6b\x66\xe8\x19\xd2\x0e\xb8\xd0\x00\x7f\xc6\x93\xf3\xf4\x17\x89\x9a\x18\x17\xba\x46\x7e\x1d\x14\xc0\x76\xf8\x42\x21\x47\x9e\x7c\xbc\x2a\x80\x0b\x71\x76\x31\x0c\xf0\x5f\xab\x3b\x7d\x53\xef\x75\xab\xf7\xba\x3b\xe8\xae\xeb\x95\x89\x41\xd0\x05\xe2\xa2\x81\x8b\x3d\xf6\xe5\x06\xe0\x9c\xd6\x01\x18\x5d\xe2\xf8\x2f\x19\x69\x0c\xf2\xe2\x77\xf2\x2e\x3f\x54\xec\xce\xa4\xb5\xc2\xcd\xf7\xe0\xe7\x0a\x4f\xc9\x1c\x7b\x4f\xc3\xf7\x98\x0f\xf4\x83\xfb\x8d\x37\xfb\x4c\xb0\x94\x0d\xbb\x24\xd5\xf6\x6f\x0a\x3e\xd2\xcb\x80\x4c\x90\x17\xf4\xfe\x09\x7c\xbc\xee\x3c\x0a\x05\x73\xdf\x8a\x14\xaf\xc4\xb0\x44\x4b\x3e\x43\xc2\x12\xb4\x10\xbb\x37\xb2\x20\x11\x16\x22\x01\x99\x09\x98\x72\x5c\xd9\x10\x98\x18\xb2\x30\xba\x20\x19\xe2\x04\x08\x17\x64\x47\x72\x2f\xc5\x9a\x09\x0c\x66\xca\x5a\x01\xbc\xcc\x2e\x43\x20\x29\x63\xab\x2c\x97\x37\x4a\xd7\xf5\xe0\xf1\x4e\x9c\x01\x83\x05\x34\xb3\xa3\x0b\x65\x38\xec\xf5\x11\x24\xa6\x5d\x5b\x9f\x3f\x1f\xf4\xbe\x96\x07\x40\x63\x56\x46\x73\xd7\x8a\x69\x22\xa6\x60\x28\x97\x4c\x77\x30\x8b\xa4\x3c\x34\x0d\xf2\xcd\x5d\x74\xe4\x73\x93\xec\xd4\xb4\xcf\xfb\x5e\xef\xfb\x5f\x8f\xad\x4e\x76\x52\xde\x19\x0a\xb9\xec\xcc\x8f\xdf\x7f\x28\x17\xd2\x2a\x0f\xba\xdc\x13\x0d\xe0\x16\x3c\x53\x4d\xfc\x4b\x88\xc5\x76\x05\x7f\x02\xbc\x07\x94\xb7\x99\x02\x58\xb7\x50\x28\xcb\x96\x07\xf8\xbb\x7d\x82\x5f\x9e\x8a\xc1\x7a\xf9\x47\xc5\x55\xd2\x2a\x05\xba\x75\x9a\x08\x65\xe5\x22\xf5\xa5\x13\x06\xd8\x90\x5b\xa7\x92\x1a\x78\x3c\x91\x57\x3f\x77\x7c\x48\xe4\x71\x65\x3f\x54\xff\x43\xd3\x58\x14\xd4\x76\xf1\x46\x2f\xbe\x59\x6e\x81\xa4\xd9\x26\xda\x54\xc1\x52\xe7\x7b\xc8\x24\x5a\x6e\xa2\xea\x51\x51\x33\x33\x99\xd7\x14\x5d\x90\x0f\xa5\x78\x0d\x3e\xa2\xd5\x1f\x6b\x56\x63\x7d\xc8\x2d\x75\xa9\x02\xc9\x78\x69\xc7\xf2\x69\x8d\x5d\xd7\x8f\xdd\xbe\x7d\x1e\xf7\xc7\xb1\xed\xb5\x20\xeb\xf3\x9b\x02\x70\x79\x44\x36\xb3\xbb\xd0\x00\xc2\x2b\x29\x14\x61\x77\x5a\x65\x1b\xdd\x82\xc1\x4d\x94\x65\xc4\x55\xe6\xc8\x03\xe0\xc9\xae\xde\x96\xa4\x18\x9d\x77\xe1\x3c\x16\x53\x99\x64\x80\x3f\x8a\x87\xf2\x1b\x98\x9d\xb5\x14\x1e\x7a\xff\x07\x00\x00\xff\xff\xf1\xb7\x2c\x09\x24\x04\x00\x00"

func mobilenet_v1_025_224YmlBytes() ([]byte, error) {
	return bindataRead(
		_mobilenet_v1_025_224Yml,
		"MobileNet_v1_0.25_224.yml",
	)
}

func mobilenet_v1_025_224Yml() (*asset, error) {
	bytes, err := mobilenet_v1_025_224YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MobileNet_v1_0.25_224.yml", size: 1060, mode: os.FileMode(420), modTime: time.Unix(1501597770, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mobilenet_v1_050_128Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xbd\x72\xf3\x36\x10\xec\xf1\x14\xf7\x00\x16\x28\x32\xb2\xac\xb0\x48\x95\x26\x45\xe2\xc6\x5d\x26\xc3\x39\x01\x47\x11\x31\x08\x60\x0e\x47\xfd\xb8\xf8\x9e\xfd\x1b\x80\x1a\xff\xcc\xd7\xb8\xe1\xf0\x88\xdd\x3d\xee\xde\x91\x01\x67\xea\xe1\xef\x78\x74\x9e\xfe\x21\x51\x23\xe3\x4c\x97\xc8\xaf\xbd\x02\x58\x0f\x5f\x28\xe4\xc8\xa3\x8f\x17\x05\x70\x26\xce\x2e\x86\x1e\x7e\xb4\xba\xd3\x57\xf5\x5e\xb7\x7a\xab\x1f\xb7\xba\xed\x0e\xca\xc4\x20\xe8\x02\x71\xd1\xc0\xd9\xee\x77\xe5\x06\xe0\x94\x96\x1e\x18\x5d\xe2\xf8\x3f\x19\x69\x0c\xf2\xec\x37\xf2\x2e\xdf\x57\xec\xc6\xa4\xa5\xc2\xcd\xf7\xe0\xa7\x0a\x4f\xc9\xec\x77\x9e\xfa\xef\x31\xef\xe8\x3b\xf7\x1b\x6f\xf6\x99\x60\x29\x1b\x76\x49\xaa\xed\x3f\x14\x7c\xa4\x97\x01\x99\x20\xcf\xe8\xfd\x03\xf8\x78\xd9\x78\x14\x0a\xe6\xb6\x16\x29\x5e\x88\x61\x8e\x96\x7c\x86\x84\x25\x68\x21\x76\x6f\x64\x41\x22\xcc\x44\x02\x32\x11\x30\xe5\xb8\xb0\x21\x30\x31\x64\x61\x74\x41\x32\xc4\x11\x10\xce\xc8\x8e\xe4\x56\x8a\x25\x13\x18\xcc\x94\xb5\x02\x78\x99\x5c\x86\x40\x52\xc6\x56\x59\x2e\xaf\x94\xb6\x3b\x80\xc7\x1b\x71\x06\x0c\x16\xd0\x4c\x8e\xce\x94\xe1\x71\xaf\x3b\x90\x98\x36\x6d\x7d\xfe\xf4\xbb\xde\xd7\xf2\x11\xd0\x98\x85\xd1\xdc\xb4\x62\x1a\x89\x29\x18\xca\x25\xd3\x0d\x4c\x22\x29\xf7\x4d\x83\x7c\x75\x67\x1d\xf9\xd4\x24\x3b\x36\xed\xd3\x76\xa7\xb7\xbb\xc3\xbe\xd5\xc9\x8e\xca\x3b\x43\x21\x97\x9d\x79\xfe\xf3\x59\xb9\x90\x16\xb9\xd3\xe5\x96\xa8\x07\x37\xe3\x89\x6a\xe2\x5f\x42\x2c\xb6\x2b\xf8\x13\xe0\x3d\xa0\xbc\xce\x14\xc0\xba\x99\x42\x59\xb6\xdc\xc3\xbf\xed\x03\xfc\xf6\x00\x5d\xb7\xab\x97\xff\x54\x5c\x24\x2d\x52\xa0\x6b\xa7\x91\x50\x16\x2e\x52\x5f\x3a\x61\x80\x15\xb9\x76\x2a\xa9\x81\xc7\x23\x79\xf5\x6b\xc7\xbb\x44\x1e\x16\xf6\x7d\xf5\xdf\x37\x8d\x45\x41\x6d\x67\x6f\xf4\xec\x9b\xf9\x1a\x48\x9a\x75\xa2\x4d\x15\x2c\x75\xbe\x85\x4c\xa2\xe5\x2a\xaa\x1e\x15\x35\x33\x91\x79\x4d\xd1\x05\xf9\x50\x8a\x97\xe0\x23\x5a\xfd\xb1\x66\x35\xd6\xbb\xdc\x5c\x97\x2a\x90\x0c\xe7\x76\x28\x9f\xd6\xd0\x76\x87\xa1\xdb\xb6\x4f\xc3\x76\x3f\xb4\x3b\x2d\xc8\xfa\xf4\xa6\x00\x5c\x1e\x90\xcd\xe4\xce\xd4\x83\xf0\x42\x0a\x45\xd8\x1d\x17\x59\x47\x37\x63\x70\x23\x65\x19\x70\x91\x29\x72\x0f\x78\xb4\x8b\xb7\x25\x29\x46\xe7\x5d\x38\x0d\xc5\x54\x26\xe9\xe1\xaf\xe2\xa1\xfc\x06\x26\x67\x2d\x85\xbb\xde\xcf\x00\x00\x00\xff\xff\x94\x6d\xa3\xdc\x24\x04\x00\x00"

func mobilenet_v1_050_128YmlBytes() ([]byte, error) {
	return bindataRead(
		_mobilenet_v1_050_128Yml,
		"MobileNet_v1_0.50_128.yml",
	)
}

func mobilenet_v1_050_128Yml() (*asset, error) {
	bytes, err := mobilenet_v1_050_128YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MobileNet_v1_0.50_128.yml", size: 1060, mode: os.FileMode(420), modTime: time.Unix(1501597773, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mobilenet_v1_050_224Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xbb\x72\xc4\x36\x0c\xec\xf9\x15\xf8\x00\x1f\x75\x52\xe4\xb3\x47\x45\xaa\x34\x29\x12\x37\xee\x32\x19\x0d\x8e\x84\x4e\x8c\x29\x92\x03\x42\xf7\x70\x91\x6f\xcf\x90\xba\xf1\x63\xd2\xb8\xd1\x08\xe2\xee\x42\xbb\x80\x14\x70\xa1\x01\xfe\x88\x47\xe7\xe9\x4f\x12\x35\x31\x2e\x74\x89\xfc\x36\x28\x80\xed\xf0\x95\x42\x8e\x3c\xf9\x78\x51\x00\x67\xe2\xec\x62\x18\xe0\xdf\x56\x77\xfa\xaa\x3e\xea\x56\xef\xf5\xe3\x5e\x77\x5d\xaf\x4c\x0c\x82\x2e\x10\x17\x0d\x5c\xec\xa1\x2f\x37\x00\xa7\xb4\x0e\xc0\xe8\x12\xc7\x7f\xc8\x48\x63\x90\x17\xbf\x93\x0f\xf9\xa1\x62\x77\x26\xad\x15\x6e\x7e\x06\x3f\x55\x78\x4a\xe6\xd0\x7b\x1a\x7e\xc6\xbc\xa3\xef\xdc\x1f\xbc\xd9\x57\x82\xa5\x6c\xd8\x25\xa9\xb6\x7f\x55\xf0\x99\x5e\x06\x64\x82\xbc\xa0\xf7\x0f\xe0\xe3\x65\xe7\x51\x28\x98\xdb\x56\xa4\x78\x21\x86\x25\x5a\xf2\x19\x12\x96\xa0\x85\xd8\xbd\x93\x05\x89\xb0\x10\x09\xc8\x4c\xc0\x94\xe3\xca\x86\xc0\xc4\x90\x85\xd1\x05\xc9\x10\x27\x40\x38\x23\x3b\x92\x5b\x29\xd6\x4c\x60\x30\x53\xd6\x0a\xe0\x75\x76\x19\x02\x49\x19\x5b\x65\xb9\xbc\x51\xba\xae\x07\x8f\x37\xe2\x0c\x18\x2c\xa0\x99\x1d\x9d\x29\xc3\xa1\xd7\x7b\x90\x98\x76\x6d\x7d\xfe\xfc\xa8\xfb\x5a\x3e\x02\x1a\xb3\x32\x9a\x9b\x56\x4c\x13\x31\x05\x43\xb9\x64\xba\x83\x59\x24\xe5\xa1\x69\x90\xaf\xee\xac\x23\x9f\x9a\x64\xa7\xa6\x7d\xda\xf7\x7a\xdf\x3f\x1f\x5a\x9d\xec\xa4\xbc\x33\x14\x72\xd9\x99\x97\xdf\x5e\x94\x0b\x69\x95\x3b\x5d\x6e\x89\x06\x70\x0b\x9e\xa8\x26\xfe\x2d\xc4\x62\xbb\x82\xbf\x00\x3e\x02\xca\xdb\x4c\x01\xac\x5b\x28\x94\x65\xcb\x03\xfc\xd5\x3e\xc0\x2f\x0f\xc5\x60\xbd\xfc\xad\xe2\x2a\x69\x95\x02\xdd\x3a\x4d\x84\xb2\x72\x91\xfa\xd6\x09\x03\x6c\xc8\xad\x53\x49\x0d\x3c\x1e\xc9\xab\xff\x77\xbc\x4b\xe4\x71\x65\x3f\x54\xff\x43\xd3\x58\x14\xd4\x76\xf1\x46\x2f\xbe\x59\xae\x81\xa4\xd9\x26\xda\x54\xc1\x52\xe7\x5b\xc8\x24\x5a\xae\xa2\xea\x51\x51\x33\x33\x99\xb7\x14\x5d\x90\x4f\xa5\x78\x09\x3e\xa2\xd5\x9f\x6b\x56\x63\xbd\xcb\x2d\x75\xa9\x02\xc9\x78\x6e\xc7\xf2\x69\x8d\x5d\xd7\x8f\xdd\xbe\x7d\x1a\xf7\x87\xb1\xed\xb5\x20\xeb\xd3\xbb\x02\x70\x79\x44\x36\xb3\x3b\xd3\x00\xc2\x2b\x29\x14\x61\x77\x5c\x65\x1b\xdd\x82\xc1\x4d\x94\x65\xc4\x55\xe6\xc8\x03\xe0\xd1\xae\xde\x96\xa4\x18\x9d\x77\xe1\x34\x16\x53\x99\x64\x80\xdf\x8b\x87\xf2\x1b\x98\x9d\xb5\x14\xee\x7a\xff\x05\x00\x00\xff\xff\xc3\x0e\xa8\x66\x24\x04\x00\x00"

func mobilenet_v1_050_224YmlBytes() ([]byte, error) {
	return bindataRead(
		_mobilenet_v1_050_224Yml,
		"MobileNet_v1_0.50_224.yml",
	)
}

func mobilenet_v1_050_224Yml() (*asset, error) {
	bytes, err := mobilenet_v1_050_224YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MobileNet_v1_0.50_224.yml", size: 1060, mode: os.FileMode(420), modTime: time.Unix(1501597777, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mobilenet_v1_075_128Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xbd\x72\xdb\x3c\x10\xec\xf1\x14\xf7\x00\x16\x28\xca\xb2\xac\x61\xf1\x55\x5f\x93\x22\x71\xe3\x2e\x93\xe1\x9c\x80\xa3\x88\x18\x04\x30\x87\xa3\x7e\x5c\xe4\xd9\x33\x00\x35\xfe\x99\x34\x6e\x38\x3c\x62\x77\x8f\xbb\x77\x64\xc0\x89\x3a\xf8\x1e\x0f\xce\xd3\x0f\x12\x35\x30\x4e\x74\x8e\xfc\xd2\x29\x80\xe5\xf0\x99\x42\x8e\x3c\xf8\x78\x56\x00\x27\xe2\xec\x62\xe8\xe0\x4f\xab\x37\xfa\xa2\xde\xea\x56\xaf\xf5\xe3\x83\x6e\x37\x7b\x65\x62\x10\x74\x81\xb8\x68\xe0\x64\x77\xdb\x72\x03\x70\x4c\x73\x07\x8c\x2e\x71\xfc\x4d\x46\x1a\x83\x3c\xf9\x95\xbc\xc9\x77\x15\xbb\x32\x69\xae\x70\xf3\x35\xf8\xb1\xc2\x53\x32\xbb\xad\xa7\xee\x6b\xcc\x1b\xfa\xc6\xfd\xc2\x9b\x7d\x24\x58\xca\x86\x5d\x92\x6a\xfb\x3f\x05\xef\xe9\x65\x40\x26\xc8\x13\x7a\x7f\x07\x3e\x9e\x57\x1e\x85\x82\xb9\x2e\x45\x8a\x67\x62\x98\xa2\x25\x9f\x21\x61\x09\x5a\x88\xdd\x2b\x59\x90\x08\x13\x91\x80\x8c\x04\x4c\x39\xce\x6c\x08\x4c\x0c\x59\x18\x5d\x90\x0c\x71\x00\x84\x13\xb2\x23\xb9\x96\x62\xce\x04\x06\x33\x65\xad\x00\x9e\x47\x97\x21\x90\x94\xb1\x55\x96\xcb\x0b\xa5\xdd\xec\xc1\xe3\x95\x38\x03\x06\x0b\x68\x46\x47\x27\xca\xb0\x6b\xf5\x1e\x24\xa6\x55\x5b\x9f\xef\xef\xf5\xae\x96\x0f\x80\xc6\xcc\x8c\xe6\xaa\x15\xd3\x40\x4c\xc1\x50\x2e\x99\xae\x60\x14\x49\xb9\x6b\x1a\xe4\x8b\x3b\xe9\xc8\xc7\x26\xd9\xa1\x69\x1f\xd7\x5b\xbd\xde\xee\x77\xad\x4e\x76\x50\xde\x19\x0a\xb9\xec\xcc\xd3\xff\x4f\xca\x85\x34\xcb\x8d\x2e\xd7\x44\x1d\xb8\x09\x8f\x54\x13\xff\x14\x62\xb1\x5d\xc1\x1f\x00\x6f\x01\xe5\x65\xa6\x00\xd6\x4d\x14\xca\xb2\xe5\x0e\x7e\xb6\x77\x70\x7f\x07\x9b\xcd\xb6\x5e\x7e\xa9\x38\x4b\x9a\xa5\x40\x97\x4e\x03\xa1\xcc\x5c\xa4\x3e\x75\xc2\x00\x0b\x72\xe9\x54\x52\x03\x8f\x07\xf2\xea\xdf\x8e\x37\x89\xdc\xcf\xec\xbb\xea\xbf\x6b\x1a\x8b\x82\xda\x4e\xde\xe8\xc9\x37\xd3\x25\x90\x34\xcb\x44\x9b\x2a\x58\xea\x7c\x0d\x99\x44\xcb\x45\x54\x3d\x2a\x6a\x66\x24\xf3\x92\xa2\x0b\xf2\xae\x14\xcf\xc1\x47\xb4\xfa\x7d\xcd\x6a\xac\x37\xb9\xa9\x2e\x55\x20\xe9\x4f\x6d\x5f\x3e\xad\xbe\xdd\xec\xfb\xcd\xba\x7d\xec\xd7\xbb\xbe\xdd\x6a\x41\xd6\xc7\x57\x05\xe0\x72\x8f\x6c\x46\x77\xa2\x0e\x84\x67\x52\x28\xc2\xee\x30\xcb\x32\xba\x09\x83\x1b\x28\x4b\x8f\xb3\x8c\x91\x3b\xc0\x83\x9d\xbd\x2d\x49\x31\x3a\xef\xc2\xb1\x2f\xa6\x32\x49\x07\xdf\x8a\x87\xf2\x1b\x18\x9d\xb5\x14\x6e\x7a\x7f\x03\x00\x00\xff\xff\x62\xf0\x99\xed\x24\x04\x00\x00"

func mobilenet_v1_075_128YmlBytes() ([]byte, error) {
	return bindataRead(
		_mobilenet_v1_075_128Yml,
		"MobileNet_v1_0.75_128.yml",
	)
}

func mobilenet_v1_075_128Yml() (*asset, error) {
	bytes, err := mobilenet_v1_075_128YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MobileNet_v1_0.75_128.yml", size: 1060, mode: os.FileMode(420), modTime: time.Unix(1501597779, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mobilenet_v1_075_224Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xbd\x92\x9c\x3c\x10\xcc\x79\x8a\x79\x80\x5b\xb1\xf0\x71\xbb\xf7\x11\x38\x72\xe2\xc0\xbe\xe4\x32\x97\x8b\x9a\x95\x86\x45\x3e\x21\xa9\x46\xc3\xfe\x5c\xe0\x67\x77\x49\x6c\xdd\x4f\x39\xb9\x84\x62\x50\x77\x0f\xdd\x33\xe0\x71\xa6\x1e\xbe\x87\x83\x75\xf4\x83\xa4\x1a\x19\x67\x3a\x07\x7e\xee\x2b\x80\xf5\xf0\x89\x7c\x0a\x3c\xba\x70\xae\x00\x4e\xc4\xc9\x06\xdf\xc3\x9f\x46\xb5\xea\x52\xbd\xd6\x8d\xda\xaa\xfd\xbd\x6a\xdb\xae\xd2\xc1\x0b\x5a\x4f\x9c\x35\x70\x36\xbb\x2e\xdf\x00\x1c\xe3\xd2\x03\xa3\x8d\x1c\x7e\x93\x96\x5a\x23\xcf\x6e\x23\xaf\xf2\x7d\xc1\x6e\x74\x5c\x0a\x5c\x7f\x0e\x7e\x2c\xf0\x18\xf5\xae\x73\xd4\x7f\x8e\x79\x43\xdf\xb8\x9f\x78\xb3\xf7\x04\x43\x49\xb3\x8d\x52\x6c\x7f\xa9\xe0\x2d\xbd\x04\xc8\x04\x69\x46\xe7\xee\xc0\x85\xf3\xc6\xa1\x90\xd7\xd7\xb5\x88\xe1\x4c\x0c\x73\x30\xe4\x12\x44\xcc\x41\x0b\xb1\x7d\x21\x03\x12\x60\x26\x12\x90\x89\x80\x29\x85\x85\x35\x81\x0e\x3e\x09\xa3\xf5\x92\x20\x8c\x80\x70\x42\xb6\x24\xd7\x5c\x2c\x89\x40\x63\xa2\xa4\x2a\x80\xa7\xc9\x26\xf0\x24\x79\x6c\x85\x65\xd3\x4a\x69\xdb\x0e\x1c\x5e\x89\x13\xa0\x37\x80\x7a\xb2\x74\xa2\x04\xfb\xad\xda\x83\x84\xb8\x69\xca\xf3\x87\xff\xd5\x7d\x29\xef\x01\xb5\x5e\x18\xf5\x55\x55\x4c\x23\x31\x79\x4d\x29\x67\xba\x81\x49\x24\xa6\xbe\xae\x91\x2f\xf6\xa4\x02\x1f\xeb\x68\xc6\xba\xd9\x6f\x3b\xb5\xed\x1e\x76\x8d\x8a\x66\xac\x9c\xd5\xe4\x53\xde\x99\xc7\xaf\x8f\x95\xf5\x71\x91\x1b\x5d\xae\x91\x7a\xb0\x33\x1e\xa9\x24\xfe\x21\xc4\x6c\xbb\x80\xdf\x01\x5e\x03\x4a\xeb\x4c\x01\x8c\x9d\xc9\xe7\x65\x4b\x3d\xfc\x6c\xee\xe0\xbf\xbb\x6c\xb0\x5c\x7e\x55\x61\x91\xb8\x48\x86\xae\x9d\x46\x42\x59\x38\x4b\x7d\xe8\x84\x1e\x56\xe4\xda\x29\xa7\x06\x0e\x0f\xe4\xaa\x7f\x3b\xde\x24\xd2\xb0\xb0\xeb\x8b\xff\xbe\xae\x0d\x0a\x2a\x33\x3b\xad\x66\x57\xcf\x17\x4f\x52\xaf\x13\xad\x8b\x60\xae\xd3\xd5\x27\x12\x25\x17\xa9\xca\x51\x56\xd3\x13\xe9\xe7\x18\xac\x97\x37\xa5\x70\xf6\x2e\xa0\x51\x6f\x6b\x56\x62\xbd\xc9\xcd\x65\xa9\x3c\xc9\x70\x6a\x86\xfc\x69\x0d\x6d\xdb\x0d\xed\xb6\xd9\x0f\xdb\xdd\xd0\x74\x4a\x90\xd5\xf1\xa5\x02\xb0\x69\x40\xd6\x93\x3d\x51\x0f\xc2\x0b\x55\x28\xc2\xf6\xb0\xc8\x3a\xba\x19\xbd\x1d\x29\xc9\x80\x8b\x4c\x81\x7b\xc0\x83\x59\x9c\xc9\x49\x31\x5a\x67\xfd\x71\xc8\xa6\x12\x49\x0f\xdf\xb2\x87\xfc\x1b\x98\xac\x31\xe4\x6f\x7a\x7f\x03\x00\x00\xff\xff\x0e\x7e\x3e\xdd\x24\x04\x00\x00"

func mobilenet_v1_075_224YmlBytes() ([]byte, error) {
	return bindataRead(
		_mobilenet_v1_075_224Yml,
		"MobileNet_v1_0.75_224.yml",
	)
}

func mobilenet_v1_075_224Yml() (*asset, error) {
	bytes, err := mobilenet_v1_075_224YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MobileNet_v1_0.75_224.yml", size: 1060, mode: os.FileMode(420), modTime: time.Unix(1501597782, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mobilenet_v1_10_128Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xbd\x6e\xe3\x3c\x10\xec\xf5\x14\xfb\x00\x31\x65\x3a\x8e\x63\xa8\xf8\xaa\xaf\xb9\xe2\x2e\x4d\xba\xc3\x41\x58\x93\x2b\x8b\x17\x8a\x24\x96\x2b\xff\xa4\xb8\x67\x3f\x90\x32\xf2\x83\x6b\xd2\x08\x5a\x71\x66\x56\x33\xbb\x60\xc0\x89\x3a\xf8\x1e\x0f\xce\xd3\x0f\x92\x66\x60\x9c\xe8\x1c\xf9\xa5\x6b\x00\x96\xc3\x67\x0a\x39\xf2\xe0\xe3\xb9\x01\x38\x11\x67\x17\x43\x07\x7f\xb4\xda\xa8\x4b\xf3\x56\x6b\xa5\xd5\x5a\xe9\xcd\xbe\x31\x31\x08\xba\x40\x5c\x24\x70\xb2\xbb\x6d\x79\x01\x38\xa6\xb9\x03\x46\x97\x38\xfe\x26\x23\xad\x41\x9e\xfc\x4a\xde\xd4\xbb\x8a\x5d\x99\x34\x57\xb8\xf9\x1a\xfc\x58\xe1\x29\x99\xdd\xd6\x53\xf7\x35\xe6\x0d\x7d\xe3\x7e\xe1\xcf\x3e\x12\x2c\x65\xc3\x2e\x49\x75\xfd\x5f\x03\xef\xe1\x65\x40\x26\xc8\x13\x7a\x7f\x07\x3e\x9e\x57\x1e\x85\x82\xb9\x2e\x45\x8a\x67\x62\x98\xa2\x25\x9f\x21\x61\xc9\x59\x88\xdd\x2b\x59\x90\x08\x13\x91\x80\x8c\x04\x4c\x39\xce\x6c\x08\x4c\x0c\x59\x18\x5d\x90\x0c\x71\x00\x84\x13\xb2\x23\xb9\x96\x62\xce\x04\x06\x33\x65\xd5\x00\x3c\x8f\x2e\x43\x20\x29\x53\xab\x2c\x97\x17\x8a\xde\xec\xc1\xe3\x95\x38\x03\x06\x0b\x68\x46\x47\x27\xca\xb0\xdb\x2a\x0d\x12\xd3\x4a\xd7\xef\xfb\x07\x75\x5f\xcb\x07\x40\x63\x66\x46\x73\x55\x0d\xd3\x40\x4c\xc1\x50\x2e\x99\xae\x60\x14\x49\xb9\x6b\x5b\xe4\x8b\x3b\xa9\xc8\xc7\x36\xd9\xa1\xd5\x8f\xeb\xad\x5a\x6f\xf7\x3b\xad\x92\x1d\x1a\xef\x0c\x85\x5c\x56\xe6\xe9\xff\xa7\xc6\x85\x34\xcb\x8d\x2e\xd7\x44\x1d\xb8\x09\x8f\x54\x13\xff\x14\x62\xb1\x5d\xc1\x1f\x00\x6f\x01\xe5\x65\xa6\x00\xd6\x4d\x14\xca\xae\xe5\x0e\x7e\xea\x3b\xb8\xbf\x83\xcd\x66\x5b\x1f\xbf\x9a\x38\x4b\x9a\xa5\x40\x97\x4e\x03\xa1\xcc\x5c\xa4\x3e\x75\xc2\x00\x0b\x72\xe9\x54\x52\x03\x8f\x07\xf2\xcd\xbf\x1d\x6f\x12\xb9\x9f\xd9\x77\xd5\x7f\xd7\xb6\x16\x05\x95\x9d\xbc\x51\x93\x6f\xa7\x4b\x20\x69\x97\x89\xb6\x55\xb0\xd4\xf9\x1a\x32\x89\x92\x8b\x34\xf5\xa8\xa8\x99\x91\xcc\x4b\x8a\x2e\xc8\xbb\x52\x3c\x07\x1f\xd1\xaa\xf7\x35\xab\xb1\xde\xe4\xa6\xba\x54\x81\xa4\x3f\xe9\x5e\xab\x75\xaf\x37\xfb\x7e\xb3\xd6\x8f\xfd\x7a\xd7\xeb\xad\x12\x64\x75\x7c\x6d\x00\x5c\xee\x91\xcd\xe8\x4e\xd4\x81\xf0\x4c\x0d\x8a\xb0\x3b\xcc\xb2\x4c\x6e\xc2\xe0\x06\xca\xd2\xe3\x2c\x63\xe4\x0e\xf0\x60\x67\x6f\x4b\x50\x8c\xce\xbb\x70\xec\x8b\xa7\x4c\xd2\xc1\xb7\x62\xa1\x5c\x02\xa3\xb3\x96\xc2\x4d\xef\x6f\x00\x00\x00\xff\xff\x40\x50\xd0\x1e\x22\x04\x00\x00"

func mobilenet_v1_10_128YmlBytes() ([]byte, error) {
	return bindataRead(
		_mobilenet_v1_10_128Yml,
		"MobileNet_v1_1.0_128.yml",
	)
}

func mobilenet_v1_10_128Yml() (*asset, error) {
	bytes, err := mobilenet_v1_10_128YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MobileNet_v1_1.0_128.yml", size: 1058, mode: os.FileMode(420), modTime: time.Unix(1501597784, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mobilenet_v1_10_224Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xbd\x72\xdc\x3c\x0c\xec\xf5\x14\x78\x00\x1f\x75\xd2\x27\xdf\xf9\x53\x91\x2a\x4d\x8a\xc4\x8d\xbb\x4c\x46\x83\x23\xa1\x13\x63\x8a\xe4\x80\xd0\xfd\xb8\xc8\xb3\x67\x48\xdd\xf8\x67\xd2\xb8\xd1\x08\xe2\xee\x42\xbb\xc0\xd0\xe3\x4c\x3d\x7c\x0f\x07\xeb\xe8\x07\x49\x35\x32\xce\x74\x0e\xfc\xdc\x57\x00\xeb\xe1\x13\xf9\x14\x78\x74\xe1\x5c\x01\x9c\x88\x93\x0d\xbe\x87\x3f\x8d\x6a\xd5\xa5\x7a\xad\x1b\xd5\xa8\xad\x6a\xdb\xae\xd2\xc1\x0b\x5a\x4f\x9c\x25\x70\x36\xbb\x2e\xbf\x00\x1c\xe3\xd2\x03\xa3\x8d\x1c\x7e\x93\x96\x5a\x23\xcf\x6e\x23\xaf\xea\x7d\xc1\x6e\x74\x5c\x0a\x5c\x7f\x0e\x7e\x2c\xf0\x18\xf5\xae\x73\xd4\x7f\x8e\x79\x43\xdf\xb8\x9f\xf8\xb3\xf7\x04\x43\x49\xb3\x8d\x52\x5c\x7f\xa9\xe0\x2d\xbc\x04\xc8\x04\x69\x46\xe7\xee\xc0\x85\xf3\xc6\xa1\x90\xd7\xd7\xb5\x88\xe1\x4c\x0c\x73\x30\xe4\x12\x44\xcc\x39\x0b\xb1\x7d\x21\x03\x12\x60\x26\x12\x90\x89\x80\x29\x85\x85\x35\x81\x0e\x3e\x09\xa3\xf5\x92\x20\x8c\x80\x70\x42\xb6\x24\xd7\x5c\x2c\x89\x40\x63\xa2\xa4\x2a\x80\xa7\xc9\x26\xf0\x24\x79\x6a\x85\x65\xd3\x4a\x69\xdb\x0e\x1c\x5e\x89\x13\xa0\x37\x80\x7a\xb2\x74\xa2\x04\xfb\xad\xda\x83\x84\xb8\x69\xca\xf7\x87\xff\xd5\x7d\x29\xef\x01\xb5\x5e\x18\xf5\x55\x55\x4c\x23\x31\x79\x4d\x29\x67\xba\x81\x49\x24\xa6\xbe\xae\x91\x2f\xf6\xa4\x02\x1f\xeb\x68\xc6\xba\xd9\x6f\x3b\xb5\xed\x1e\x76\x8d\x8a\x66\xac\x9c\xd5\xe4\x53\x5e\x99\xc7\xaf\x8f\x95\xf5\x71\x91\x1b\x5d\xae\x91\x7a\xb0\x33\x1e\xa9\x24\xfe\x21\xc4\x6c\xbb\x80\xdf\x01\x5e\x03\x4a\xeb\x4c\x01\x8c\x9d\xc9\xe7\x5d\x4b\x3d\xfc\x6c\xee\xe0\xbf\xbb\x6c\xb0\x3c\x7e\x55\x61\x91\xb8\x48\x86\xae\x9d\x46\x42\x59\x38\x4b\x7d\xe8\x84\x1e\x56\xe4\xda\x29\xa7\x06\x0e\x0f\xe4\xaa\x7f\x3b\xde\x24\xd2\xb0\xb0\xeb\x8b\xff\xbe\xae\x0d\x0a\x2a\x33\x3b\xad\x66\x57\xcf\x17\x4f\x52\xaf\x13\xad\x8b\x60\xae\xd3\xd5\x27\x12\x25\x17\xa9\xca\x51\x56\xd3\x13\xe9\xe7\x18\xac\x97\x37\xa5\x70\xf6\x2e\xa0\x51\x6f\x6b\x56\x62\xbd\xc9\xcd\x65\xa9\x3c\xc9\x70\x6a\x86\x46\x6d\x87\xb6\xed\x86\x76\xdb\xec\x87\xed\x6e\x68\x3a\x25\xc8\xea\xf8\x52\x01\xd8\x34\x20\xeb\xc9\x9e\xa8\x07\xe1\x85\x2a\x14\x61\x7b\x58\x64\x9d\xdc\x8c\xde\x8e\x94\x64\xc0\x45\xa6\xc0\x3d\xe0\xc1\x2c\xce\xe4\xa0\x18\xad\xb3\xfe\x38\x64\x4f\x89\xa4\x87\x6f\xd9\x42\xbe\x04\x26\x6b\x0c\xf9\x9b\xde\xdf\x00\x00\x00\xff\xff\x14\x1a\xb6\xd8\x22\x04\x00\x00"

func mobilenet_v1_10_224YmlBytes() ([]byte, error) {
	return bindataRead(
		_mobilenet_v1_10_224Yml,
		"MobileNet_v1_1.0_224.yml",
	)
}

func mobilenet_v1_10_224Yml() (*asset, error) {
	bytes, err := mobilenet_v1_10_224YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "MobileNet_v1_1.0_224.yml", size: 1058, mode: os.FileMode(420), modTime: time.Unix(1501597786, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _inceptionYml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xc1\x6e\xd4\x30\x10\xbd\xfb\x2b\xe6\xc2\xad\xeb\x6c\xd2\x6e\x4b\x7d\x40\x42\x70\xa9\x04\x54\x02\xc4\x05\x55\xd1\xac\x3d\x49\x0c\x8e\x6d\xd9\x93\xdd\x2d\x07\xbe\x1d\x39\xd9\x76\x5b\x71\xd9\x4b\xe4\xd1\xbc\x79\xf3\xf2\xe6\x79\x1c\x49\xc1\x9d\xd7\x14\xd9\x06\x2f\xba\x84\x23\xed\x43\xfa\xad\x04\xc0\xd2\xfc\x4e\x3e\x87\xd4\xb9\xb0\x17\x00\x3b\x4a\xd9\x06\xaf\xe0\x6f\x2d\x1b\x79\x10\xcf\xf5\xa5\x5c\x0b\x1d\x3c\xa3\xf5\x94\xca\x30\x8e\xe6\xfa\xaa\x3c\x00\xfa\x38\x29\x48\x68\x63\x0a\xbf\x48\x73\xa5\x31\x8d\x6e\xc5\xcf\xbc\x6a\xc6\xae\x74\x9c\x66\xb8\x3e\x0f\xde\xcf\xf0\x18\xf5\xf5\x95\x23\x75\xde\xe4\x11\x7d\x9c\x3d\x43\xd9\xcb\x01\x43\x59\x27\x3b\xfb\xa4\xe0\x9d\x00\x78\xef\xc1\x8e\xd8\xd3\x4a\x3b\xcc\xd9\x76\x56\x63\x69\x82\x0e\x7e\x17\xdc\x54\xde\xe8\xc0\x13\x17\x43\xa5\x80\x93\xcf\x80\x7a\xb0\xb4\xa3\x0c\x37\x6f\xe5\xfa\x0d\x70\x88\xab\x1a\xd0\x1b\xb8\xbd\x94\xb7\x4b\xbd\x01\xd4\x7a\x4a\xa8\x1f\x21\x78\xe0\x81\xe0\xee\xd3\xb7\x1f\x5f\x3f\x40\xb3\xae\x1b\xd8\xa1\xb3\x66\x59\x67\x90\x31\x13\xcf\x0b\xb8\x2c\xcf\x36\x73\x86\xd0\x41\x47\x7b\x4a\xc0\x03\x7a\x68\x36\x9f\x21\x62\xb9\x2e\x53\xca\x52\x24\xea\x28\x91\xd7\x94\x8b\x75\x2b\x18\x98\x63\x56\x55\x85\xe9\x60\x77\x32\xa4\xbe\x8a\xa6\xab\xea\x4d\xdd\xc8\xf5\x7a\x73\x7d\x23\xa3\xe9\x84\xb3\x9a\x7c\x2e\x99\xb8\xff\x78\x2f\xac\x8f\x13\x1f\xc7\xf9\x31\x92\x5a\xdc\x98\x8d\x7d\xe5\x55\xd1\x3e\x83\x5f\x00\x4e\x5a\x96\xd3\x01\x18\x3b\x92\x2f\x61\xca\x0a\x7e\xd6\x17\x70\x79\x01\x4d\x73\x35\x7f\x1e\x8e\x90\x91\xd0\x97\x66\x7d\x73\x01\x4f\x9f\x07\x11\x26\x8e\x13\x17\x9a\x45\x45\x47\xc8\x53\x2a\x6b\x5e\xa9\x40\x0f\x0b\x72\x51\x51\xee\x02\x0e\xb7\xe4\xc4\xff\x6a\x8e\x14\xb9\x9d\x92\x53\xb3\x37\xaa\xaa\x8a\xcf\xd2\x8c\x4e\xcb\xd1\x55\xe3\xc1\x13\x57\x63\x30\xe4\x72\x35\x13\x96\x3a\x3f\xfa\x72\x09\x3e\xb0\x98\x5b\x85\x6d\x8b\x99\x4e\x3c\xc5\xe3\xcc\x21\x61\x4f\xb2\x0f\xa1\x77\x84\xd1\x66\xa9\xc3\x58\x99\xb0\xf7\x2e\xa0\x91\xa7\xfc\xcd\x87\x78\x5a\xf2\x14\x9e\xcd\x20\xff\xd8\x28\x00\xfa\x84\x71\x68\x23\xf2\xa0\xe0\x34\xd3\x3e\x03\xdb\x19\x20\xe3\x56\x00\xd8\xdc\x62\xd2\x83\xdd\x91\x02\x4e\x13\x09\x64\x4e\x76\x3b\xf1\x12\x80\x11\xbd\xed\x28\x73\x8b\x13\x0f\x21\x29\xc0\xad\x99\x9c\x29\x9e\x26\xb4\xce\xfa\xbe\x3d\xc6\x4c\xc1\x5d\xf9\xdb\x2f\xc4\xe2\x5f\x00\x00\x00\xff\xff\x47\x45\x01\x4f\x3d\x04\x00\x00"

func inceptionYmlBytes() ([]byte, error) {
	return bindataRead(
		_inceptionYml,
		"inception.yml",
	)
}

func inceptionYml() (*asset, error) {
	bytes, err := inceptionYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "inception.yml", size: 1085, mode: os.FileMode(420), modTime: time.Unix(1501275297, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resnet152Yaml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xcf\x6e\xdb\x38\x10\xc6\xef\x7c\x8a\x79\x80\x98\xb2\xe4\xc8\xeb\xd5\x61\x81\xc5\xee\x25\x40\x91\x00\x69\xd0\x4b\x51\x08\x63\x72\x64\xb1\xa1\x48\x82\x1c\xfa\x4f\x0f\x7d\xf6\x82\x92\x9b\x3f\xe8\x25\x17\xc3\x14\xbf\xef\x37\x33\x1f\xc7\xe1\x44\x1d\x3c\x52\xba\x27\xae\xdb\x46\x0c\x11\x27\x3a\xf9\xf8\xdc\x09\x80\xe5\xf2\x89\x5c\xf2\x71\xb0\xfe\x24\x00\x8e\x14\x93\xf1\xae\x83\x9f\xb5\x6c\xe4\x59\xbc\x9c\x6b\xb9\x16\xca\x3b\x46\xe3\x28\x16\x33\x4e\x7a\x7b\x5b\xfe\x00\x1c\x42\xee\x20\xa2\x09\xd1\x7f\x27\xc5\x95\xc2\x38\xd9\x15\xbf\x70\xbb\x59\xbb\x52\x21\xcf\x72\xf5\x31\xf9\x61\x96\x87\xa0\xb6\xb7\x96\xba\x8f\x39\xaf\xea\xab\xf7\x03\x9d\xbd\x35\x68\x4a\x2a\x9a\xc0\xf3\xbc\xff\x08\x80\x7f\x1d\x98\x09\x0f\xb4\x52\x16\x53\x32\x83\x51\x58\x2e\xc1\x11\x97\x08\x61\x9f\x8d\x65\xf0\x03\x58\xbc\x50\x4c\xc0\x23\x32\x58\xc2\xe8\x20\x52\x32\x3a\xa3\x85\x21\x3b\x55\x4c\x09\x4e\x32\x4a\x5e\xa4\x60\x5c\xc8\x9c\xa4\x00\x78\x1a\x4d\x7a\x01\x2a\xef\x92\x49\x9c\x0a\xb3\x6e\x9b\xdf\x5c\x74\x1a\x50\x8d\x86\x8e\x94\xe0\xaf\xad\xdc\x01\xfb\xb0\xaa\xe7\xef\x7f\x6f\x64\x33\x1f\x5b\x40\xa5\x72\x44\x75\x01\xef\xe0\xee\xd3\xe7\x2f\x8f\xff\xad\x9a\x75\xdd\x4a\x11\x69\xa0\x48\x4e\x51\x2a\x31\xae\x60\x64\x0e\xa9\xab\x2a\x8c\x67\x73\x94\x3e\x1e\xaa\xa0\x87\xaa\x6e\xeb\x46\xae\x37\x9b\x5d\x2b\x83\x1e\x84\x35\x8a\x5c\x2a\xfb\xf1\xf0\xff\x83\x58\x1a\x5e\xec\x7c\x09\xd4\x2d\xc9\xcc\x21\xbf\xcb\x8d\x47\x5a\xa6\x7b\x23\x08\x58\xb6\x8e\x29\xa6\xe5\x19\x01\xb4\x99\xc8\x95\xc5\x4a\x1d\x7c\xad\x6f\x60\x73\x03\x4d\x73\x3b\xff\x7c\x13\x3e\x73\xc8\x5c\xa4\x4b\xa5\x81\x90\x73\x2c\xa8\x77\x95\xd0\xc1\xa2\x5c\x2a\x95\x10\xc1\xe2\x9e\xac\xf8\xb3\xe2\x15\x91\xfa\x1c\x6d\x37\xcf\xdf\x55\x95\x46\x46\xa9\x27\xab\xe4\x64\xab\xe9\xec\x88\xab\xc9\x6b\xb2\xa9\x9a\x81\xe5\x9c\x2e\x2e\x11\x4b\x3e\xb3\x98\xaf\x0a\x4d\x8d\xa4\x9e\x83\x37\x8e\x5f\x49\xfe\xe4\xac\x47\x2d\x5f\x37\x6b\x8e\xf5\x8a\x8b\x94\x1c\x71\x7f\xac\xfb\xba\x6d\xfa\x66\x5d\x6f\xfb\xf5\xae\x6f\x76\x92\x31\xca\xc3\x0f\x01\x60\x52\x8f\x51\x8d\xe6\x48\x1d\x70\xcc\x24\x90\x39\x9a\x7d\xe6\xe5\xc9\x26\x74\x66\xa0\xc4\x3d\x66\x1e\x7d\xec\x00\xf7\x3a\x5b\x5d\x12\x8a\x68\xac\x71\x87\xbe\x0c\x93\x88\x3b\xb8\x2b\xbd\xdf\x13\x8b\xd1\x68\x4d\xee\xca\xfb\x15\x00\x00\xff\xff\xd5\xa1\xa5\x15\x08\x04\x00\x00"

func resnet152YamlBytes() ([]byte, error) {
	return bindataRead(
		_resnet152Yaml,
		"resnet152.yaml",
	)
}

func resnet152Yaml() (*asset, error) {
	bytes, err := resnet152YamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resnet152.yaml", size: 1032, mode: os.FileMode(420), modTime: time.Unix(1501597791, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resnet50Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xcb\x6e\xdc\x3c\x0c\x85\xf7\x7a\x0a\x3e\x40\x46\xbe\x24\xce\x9f\xdf\x8b\x02\x45\xbb\x09\x50\x24\x40\x1a\x74\x53\x14\x06\x47\xa2\xc7\x6a\x64\x49\x90\xa8\xb9\x74\xd1\x67\x2f\x64\x4f\x73\x41\x37\xd9\x0c\x46\xd6\x39\x1f\xc9\x23\x3a\x9c\xa9\x87\x07\x4a\x77\xc4\x5d\x2d\xc6\x88\x33\x1d\x7c\x7c\xea\x05\xc0\x7a\xf7\x48\x2e\xf9\x38\x5a\x7f\x10\x00\x7b\x8a\xc9\x78\xd7\xc3\xef\x46\xb6\xf2\x28\x9e\xcf\x8d\xac\x85\xf2\x8e\xd1\x38\x8a\xc5\x8c\xb3\xbe\xbe\x2a\x7f\x00\x76\x21\xf7\x10\xd1\x84\xe8\x7f\x92\xe2\x4a\x61\x9c\xed\x86\x9f\xb9\xfd\xa2\xdd\xa8\x90\x17\xb9\x7a\x9f\x7c\xb7\xc8\x43\x50\xd7\x57\x96\xfa\xf7\x39\xcf\xea\xb3\xf7\x1d\x9d\xbd\x36\x68\x4a\x2a\x9a\xc0\xcb\xbc\x1f\x04\xc0\x47\x07\x66\xc6\x1d\x6d\x94\xc5\x94\xcc\x68\x14\x96\x4b\x70\xc4\x25\x42\xd8\x66\x63\x19\xfc\x08\x16\x4f\x14\x13\xf0\x84\x0c\x96\x30\x3a\x88\x94\x8c\xce\x68\x61\xcc\x4e\x15\x53\x82\x83\x8c\x92\x57\x29\x18\x17\x32\x27\x29\x00\x1e\x27\x93\x9e\x81\xca\xbb\x64\x12\xa7\xc2\xec\xea\xbf\x58\x74\x1a\x50\x4d\x86\xf6\x94\xe0\xbf\x4e\xb6\xc0\x3e\x6c\x9a\xe5\xfb\xff\xed\xf9\xd8\x01\x2a\x95\x23\xaa\x13\x78\x07\xb7\x5f\xbe\x7e\x7b\xf8\xb4\x69\xeb\xa6\x93\x22\xd2\x48\x91\x9c\xa2\x54\x52\xdc\xc0\xc4\x1c\x52\x5f\x55\x18\x8f\x66\x2f\x7d\xdc\x55\x41\x8f\x55\xd3\x35\xad\xac\x2f\x2f\x6f\x3a\x19\xf4\x28\xac\x51\xe4\x52\x59\x8f\xfb\xcf\xf7\x62\xed\x77\xb5\xf3\x29\x50\xbf\x06\xb3\x64\xfc\x26\x36\x9e\x68\x1d\xee\x95\x20\x60\x59\x3a\xa6\x98\xd6\x57\x04\xd0\x66\x26\x57\xf6\x2a\xf5\xf0\xbd\xb9\x80\xcb\x0b\x68\xdb\xab\xe5\xe7\x87\xf0\x99\x43\xe6\x22\x5d\x2b\x8d\x84\x9c\x63\x41\xbd\xa9\x84\x0e\x56\xe5\x5a\xa9\x64\x08\x16\xb7\x64\xc5\xbf\x15\xcf\x88\x34\xe4\x68\xfb\x65\xfe\xbe\xaa\x34\x32\x4a\x3d\x5b\x25\x67\x5b\xcd\x47\x47\x5c\xcd\x5e\x93\x4d\xd5\x02\x2c\xe7\x74\x72\x89\x58\xf2\x91\xc5\x72\x55\x68\x6a\x22\xf5\x14\xbc\x71\xfc\x42\xf2\x07\x67\x3d\x6a\xf9\xb2\x58\x4b\xac\x67\x5c\xa4\xe4\x88\x87\x7d\x33\x74\xf5\xd0\xd6\xcd\xf5\x50\xdf\x0c\xed\x8d\x64\x8c\x72\xf7\x4b\x00\x98\x34\x60\x54\x93\xd9\x53\x0f\x1c\x33\x09\x64\x8e\x66\x9b\x79\x7d\xb1\x19\x9d\x19\x29\xf1\x80\x99\x27\x1f\x7b\xc0\xad\xce\x56\x97\x80\x22\x1a\x6b\xdc\x6e\x28\xb3\x24\xe2\x1e\x6e\x4b\xeb\x77\xc4\x62\x32\x5a\x93\x3b\xf3\xfe\x04\x00\x00\xff\xff\x46\x39\x38\x4a\x05\x04\x00\x00"

func resnet50YmlBytes() ([]byte, error) {
	return bindataRead(
		_resnet50Yml,
		"resnet50.yml",
	)
}

func resnet50Yml() (*asset, error) {
	bytes, err := resnet50YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resnet50.yml", size: 1029, mode: os.FileMode(420), modTime: time.Unix(1501597788, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vgg19Yml = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\x3d\x8f\xdc\x38\x0c\xed\xf5\x2b\xd8\x5c\xb7\x23\x8f\x67\x67\xe6\x66\x54\x1c\x70\xc0\x01\x8b\x6b\xb2\x4d\x90\x26\x08\x0c\xae\x44\xdb\xca\xca\x92\x20\x51\xf3\x91\x22\xbf\x3d\x90\x3d\xd9\x0f\xa4\xd9\xc6\x10\xcd\xc7\x47\xf2\xf1\x79\x9c\x48\xc1\x97\x87\x87\xf6\x28\xfa\x84\x13\x9d\x43\x7a\x56\x02\x60\x49\x7c\x26\x9f\x43\xea\x5d\x38\x0b\x80\x13\xa5\x6c\x83\x57\xf0\xb3\x95\x1b\x79\x11\x2f\x71\x2b\xd7\x42\x07\xcf\x68\x3d\xa5\x5a\x8c\x93\xd9\x6f\xeb\x03\x60\x88\x45\x41\x42\x1b\x53\xf8\x4e\x9a\x1b\x8d\x69\x72\x2b\x7e\xe1\x55\x33\x76\xa5\x63\x99\xe1\xfa\x63\xf0\x61\x86\xc7\xa8\xf7\x5b\x47\xea\x63\x95\x37\xf4\xad\xf6\x03\x93\xbd\x2d\x30\x94\x75\xb2\x91\xe7\x7d\xff\x11\x00\xff\x7a\xb0\x13\x0e\xb4\xd2\x0e\x73\xb6\xbd\xd5\x58\x93\xa0\x83\x3f\x05\x57\xea\x1b\x1d\x78\xe2\x2a\xa8\x14\xb0\x68\x0c\x25\x53\x06\xfc\xfd\x1f\xce\x96\x47\x68\x8f\xe0\xf0\x4a\x29\x43\xe8\xe1\xfe\x72\xff\x96\x03\x7a\xeb\x98\x52\x7e\x65\x40\x3d\x5a\x3a\x51\x86\xbf\x5b\xd9\xfe\x05\x1c\xe2\xaa\x05\xf4\x06\x0e\x47\x79\x58\xe2\x1d\xa0\xd6\x25\xa1\xbe\x42\xf0\xc0\x23\xc1\xff\x75\xd4\x4f\xc4\xa0\x47\x74\x8e\xfc\x40\x60\x90\x31\x13\x83\xf5\xb0\x59\xb7\x3b\x29\x12\xf5\x94\xc8\x6b\xca\x55\xd0\x15\x8c\xcc\x31\xab\xa6\xc1\x74\xb1\x27\x19\xd2\xd0\x44\xd3\x37\xed\x76\x7d\x94\xed\x6e\xb7\x97\xd1\xf4\xc2\x59\x4d\x3e\x57\xa3\x3c\xfe\xf7\x28\xac\x8f\x85\x6f\xd5\x7c\x8d\xa4\x16\x89\x66\xb5\xdf\x09\x58\x47\x9a\xc1\x6f\x00\x11\xab\xfd\xea\xae\xcb\x3d\x01\x8c\x9d\xc8\x57\x87\x65\x05\x5f\xdb\x3b\xb8\xbf\x83\xcd\x66\x3b\x7f\xbe\x89\x50\x38\x16\xae\xd0\xa5\x53\x4f\xc8\x25\x55\xaa\x77\x9d\xd0\xc3\x82\x5c\x3a\x55\xe1\xc1\xe1\x13\x39\xf1\x67\xc7\x1b\x45\xee\x4a\x72\x6a\x5e\x5f\x35\x4d\x95\x49\x9a\xc9\x69\x39\xb9\x66\xba\x78\xe2\x66\x0a\x86\x5c\x6e\x66\xc2\x1a\xe7\xab\xcf\xc4\x92\x2f\x2c\xe6\x54\x65\xd3\x23\xe9\xe7\x18\xac\xe7\x57\xa6\x70\xf6\x2e\xa0\x91\xaf\x16\x9b\x55\xbd\xd1\x9d\x86\xa1\x6b\x8f\xdd\x66\xdd\xee\xbb\xf5\xa1\xdb\x1c\x24\x63\x92\xc3\x0f\x01\x60\x73\x87\x49\x8f\xf6\x44\x0a\x38\x15\x12\xc8\x9c\xec\x53\xe1\xe5\x54\x13\x7a\xdb\x53\xe6\x0e\x0b\x8f\x21\x29\xc0\x27\x53\x9c\xa9\xd2\x24\xb4\xce\xfa\xa1\xbb\x1d\x5b\xbd\x18\x41\x8c\xd6\x18\xf2\x37\xbe\x5f\x01\x00\x00\xff\xff\xd5\x95\xe3\x85\x06\x04\x00\x00"

func vgg19YmlBytes() ([]byte, error) {
	return bindataRead(
		_vgg19Yml,
		"vgg19.yml",
	)
}

func vgg19Yml() (*asset, error) {
	bytes, err := vgg19YmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vgg19.yml", size: 1030, mode: os.FileMode(420), modTime: time.Unix(1501597793, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"MobileNet_v1_0.25_128.yml": mobilenet_v1_025_128Yml,
	"MobileNet_v1_0.25_224.yml": mobilenet_v1_025_224Yml,
	"MobileNet_v1_0.50_128.yml": mobilenet_v1_050_128Yml,
	"MobileNet_v1_0.50_224.yml": mobilenet_v1_050_224Yml,
	"MobileNet_v1_0.75_128.yml": mobilenet_v1_075_128Yml,
	"MobileNet_v1_0.75_224.yml": mobilenet_v1_075_224Yml,
	"MobileNet_v1_1.0_128.yml": mobilenet_v1_10_128Yml,
	"MobileNet_v1_1.0_224.yml": mobilenet_v1_10_224Yml,
	"inception.yml": inceptionYml,
	"resnet152.yaml": resnet152Yaml,
	"resnet50.yml": resnet50Yml,
	"vgg19.yml": vgg19Yml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"MobileNet_v1_0.25_128.yml": &bintree{mobilenet_v1_025_128Yml, map[string]*bintree{}},
	"MobileNet_v1_0.25_224.yml": &bintree{mobilenet_v1_025_224Yml, map[string]*bintree{}},
	"MobileNet_v1_0.50_128.yml": &bintree{mobilenet_v1_050_128Yml, map[string]*bintree{}},
	"MobileNet_v1_0.50_224.yml": &bintree{mobilenet_v1_050_224Yml, map[string]*bintree{}},
	"MobileNet_v1_0.75_128.yml": &bintree{mobilenet_v1_075_128Yml, map[string]*bintree{}},
	"MobileNet_v1_0.75_224.yml": &bintree{mobilenet_v1_075_224Yml, map[string]*bintree{}},
	"MobileNet_v1_1.0_128.yml": &bintree{mobilenet_v1_10_128Yml, map[string]*bintree{}},
	"MobileNet_v1_1.0_224.yml": &bintree{mobilenet_v1_10_224Yml, map[string]*bintree{}},
	"inception.yml": &bintree{inceptionYml, map[string]*bintree{}},
	"resnet152.yaml": &bintree{resnet152Yaml, map[string]*bintree{}},
	"resnet50.yml": &bintree{resnet50Yml, map[string]*bintree{}},
	"vgg19.yml": &bintree{vgg19Yml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

